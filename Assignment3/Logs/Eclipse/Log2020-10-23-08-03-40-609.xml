<Events startTimestamp="1603465420609" logVersion="1.0.0.202008151525">
  <Command __id="1" _type="ShellCommand" date="Fri Oct 23 08:04:34 PDT 2020" starttimestamp="1603465420609" timestamp="53410" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3" _type="ShellCommand" date="Fri Oct 23 08:05:14 PDT 2020" starttimestamp="1603465420609" timestamp="94382" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4" _type="ShellCommand" date="Fri Oct 23 08:05:43 PDT 2020" starttimestamp="1603465420609" timestamp="122569" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5" _type="ShellCommand" date="Fri Oct 23 08:05:47 PDT 2020" starttimestamp="1603465420609" timestamp="126715" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6" _type="ShellCommand" date="Fri Oct 23 08:06:59 PDT 2020" starttimestamp="1603465420609" timestamp="198977" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7" _type="ShellCommand" date="Fri Oct 23 08:07:01 PDT 2020" starttimestamp="1603465420609" timestamp="201045" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="8" _type="ShellCommand" date="Fri Oct 23 08:07:45 PDT 2020" starttimestamp="1603465420609" timestamp="244805" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="9" _type="ShellCommand" date="Fri Oct 23 08:07:52 PDT 2020" starttimestamp="1603465420609" timestamp="252069" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="10" _type="ShellCommand" date="Fri Oct 23 08:10:36 PDT 2020" starttimestamp="1603465420609" timestamp="415858" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="11" _type="ShellCommand" date="Fri Oct 23 08:11:01 PDT 2020" starttimestamp="1603465420609" timestamp="440504" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="12" _type="ShellCommand" date="Fri Oct 23 08:13:10 PDT 2020" starttimestamp="1603465420609" timestamp="569877" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="13" _type="ShellCommand" date="Fri Oct 23 08:13:46 PDT 2020" starttimestamp="1603465420609" timestamp="606253" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="14" _type="ShellCommand" date="Fri Oct 23 08:13:49 PDT 2020" starttimestamp="1603465420609" timestamp="608578" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="15" _type="RunCommand" date="Fri Oct 23 08:13:49 PDT 2020" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1603465420609" timestamp="608705" type="Run" />
  <Command __id="16" _type="EHExceptionCommand" date="Fri Oct 23 08:13:49 PDT 2020" starttimestamp="1603465420609" timestamp="608843" type="Exception">
    <outputString><![CDATA[Standard ML of New Jersey (64-bit) v110.98 [built: Thu Jul 16 21:55:53 2020]
- [opening SocialDistance.sml]
val SMALL_DISTANCE = 6 : int
val MEDIUM_DISTANCE = 13 : int
val LARGE_DISTANCE = 27 : int
val SMALL_DURATION = 15 : int
val MEDIUM_DURATION = 30 : int
val LARGE_DURATION = 120 : int
val SMALL_EXHALATION = 10 : int
val MEDIUM_EXHALATION = 30 : int
val LARGE_EXHALATION = 50 : int
val MAX = 200 : int
val ZERO = 0 : int
val SAFETY_TABLE =
  [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),
   (6,15,30)] : (int * int * int) list
val interpolateDistance = fn : int * int * int * int -> int
val interpolateDuration = fn : int * int * int * int -> int
val interpolateExhalation = fn : int * int * int * int -> int
val givenSafe = fn : int * int * int -> bool
val interpolatedSafe = fn : int * int * int -> boolval derivedIteration = fn
                                                     : int * int * int
                                                        * (int * int * int) 
                                                          list
                                                        -> bool
val listDerivedSafe = fn : int * int * int -> bool
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val printSafety = fn : (int * int * int -> bool) * (int * int * int) -> unitval concisePrintSafety =
                                                                              fn
                                                                              : (
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  -> 
                                                                                    bool)
                                                                                 * (
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  * 
                                                                                    int)
                                                                                 -> unitval printIterator =
                                                                                          fn
                                                                                          : ('a
                                                                                              * ('b
                                                                                               * 'c
                                                                                               * 'd)
                                                                                              -> 'e)
                                                                                             * 'a
                                                                                             * ('b
                                                                                                * 'c
                                                                                                * 'd)
                                                                                               
                                                                                               list
                                                                                             -> unit
val listPrintSafety = fn
  : ('a * ('b * 'c * 'd) -> 'e) * 'a * ('b * 'c * 'd) list -> unit
val curryableInterpolatedSafe = fn : int -> int -> int -> bool
val curriedOnceInterpolatedSafe = fn : int -> int -> boolval curriedTwiceInterpolatedSafe =
                                                           fn : int -> bool
val it = () : unit
- ]]></outputString>
  </Command>
  <Command __id="17" _type="EHExceptionCommand" date="Fri Oct 23 08:13:54 PDT 2020" starttimestamp="1603465420609" timestamp="613809" type="Exception">
    <outputString><![CDATA[printIterator;
]]></outputString>
  </Command>
  <Command __id="18" _type="EHExceptionCommand" date="Fri Oct 23 08:13:54 PDT 2020" starttimestamp="1603465420609" timestamp="613878" type="Exception">
    <outputString><![CDATA[val it = fn : ('a * ('b * 'c * 'd) -> 'e) * 'a * ('b * 'c * 'd) list -> unit
- ]]></outputString>
  </Command>
  <Command __id="19" _type="EHExceptionCommand" date="Fri Oct 23 08:14:00 PDT 2020" starttimestamp="1603465420609" timestamp="619451" type="Exception">
    <outputString><![CDATA[listPrintSafety;
]]></outputString>
  </Command>
  <Command __id="20" _type="EHExceptionCommand" date="Fri Oct 23 08:14:00 PDT 2020" starttimestamp="1603465420609" timestamp="619507" type="Exception">
    <outputString><![CDATA[val it = fn : ('a * ('b * 'c * 'd) -> 'e) * 'a * ('b * 'c * 'd) list -> unit
- ]]></outputString>
  </Command>
  <Command __id="2" _type="DiffBasedFileOpenCommand" date="Fri Oct 23 08:04:40 PDT 2020" docASTNodeCount="1" docActiveCodeLength="4236" docExpressionCount="0" docLength="4236" projectName="Assignment3" starttimestamp="1603465420609" timestamp="59741">
    <filePath><![CDATA[/Users/rupinsharma/Desktop/College/Junior/COMP 524/Assignment3/SocialDistance.sml]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[val SMALL_DISTANCE = 6;
val MEDIUM_DISTANCE = 13;
val LARGE_DISTANCE = 27;

val SMALL_DURATION = 15;
val MEDIUM_DURATION = 30;
val LARGE_DURATION = 120;

val SMALL_EXHALATION = 10;
val MEDIUM_EXHALATION = 30;
val LARGE_EXHALATION = 50;

val MAX = 200;
val ZERO = 0;

val SAFETY_TABLE = [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),(6,15,30)];

fun interpolateDistance(distance, low, medium, high) = 
	if distance < low then ZERO else
	if distance >= high then LARGE_DISTANCE else
	if distance < high andalso distance >= medium then MEDIUM_DISTANCE
	else SMALL_DISTANCE;

fun interpolateDuration(duration, low, medium, high) =
	if duration <= low then SMALL_DURATION else
	if duration > high then MAX else
	if duration > medium andalso duration <= high then LARGE_DURATION
	else MEDIUM_DURATION;
	
fun interpolateExhalation(exhalation, low, medium, high) =
	if exhalation <= low then SMALL_EXHALATION else
	if exhalation > high then MAX else
	if exhalation > medium andalso exhalation <= high then LARGE_EXHALATION
	else MEDIUM_EXHALATION;

fun givenSafe(distance, duration, exhalation) = 
	(distance = MEDIUM_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = MEDIUM_EXHALATION)
	orelse
	(distance = SMALL_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = SMALL_EXHALATION)
	orelse
	(distance = LARGE_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = LARGE_EXHALATION)
	orelse
	(distance = MEDIUM_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = LARGE_EXHALATION)
	orelse
	(distance = MEDIUM_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = SMALL_EXHALATION)
	orelse
	(distance = LARGE_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = MEDIUM_EXHALATION)
	orelse
	(distance = SMALL_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = MEDIUM_EXHALATION);
	
fun interpolatedSafe(distance, duration, exhalation) = 
	let 
		val interpolatedDistance = interpolateDistance(distance, SMALL_DISTANCE, MEDIUM_DISTANCE, LARGE_DISTANCE)
		val interpolatedDuration = interpolateDuration(duration, SMALL_DURATION, MEDIUM_DURATION, LARGE_DURATION)
		val interpolatedExhalation = interpolateExhalation(exhalation, SMALL_EXHALATION, MEDIUM_EXHALATION, LARGE_EXHALATION)
	in
		givenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhalation)
	end

fun
	derivedIteration (distance, duration, exhalation, nil) = false |
	derivedIteration (distance, duration, exhalation, ((safeDist, safeDur, safeEx) :: safetyTail)) =
		if (distance >= safeDist andalso duration <= safeDur andalso exhalation <= safeEx) then
			true
		else
			derivedIteration (distance, duration, exhalation, safetyTail);
	
fun listDerivedSafe (distance, duration, exhalation) =
	derivedIteration(distance, duration, exhalation, SAFETY_TABLE);
	
fun printSafety (safetyComputer, (distance, duration, exhalation)) =
	let
		val isSafe = safetyComputer(distance, duration, exhalation)	
	in
		print ("Distance:"^Int.toString distance^" Duration:"^Int.toString duration^" Exhalation:"^Int.toString exhalation^" Safe:"^Bool.toString isSafe^"\n")
	end
	
fun concisePrintSafety (safetyComputer, (distance, duration, exhalation)) =
	let
		val isSafe = safetyComputer(distance, duration, exhalation)	
	in
		print ("("^Int.toString distance^","^Int.toString duration^","^Int.toString exhalation^","^Bool.toString isSafe^")\n")
	end
	
fun
	printIterator(printSafety, safetyComputer, nil) = () | 
	printIterator(printSafety, safetyComputer, ((distance, duration, exhalation) :: tail)) =
	(	
		printSafety(safetyComputer, (distance, duration, exhalation)) ;
		printIterator(printSafety, safetyComputer, tail)
	);	
	
fun listPrintSafety(printSafety, safetyComputer, listToPrint) =
	printIterator(printSafety, safetyComputer, listToPrint);
	
fun curryableInterpolatedSafe distance duration exhalation =
	interpolatedSafe(distance, duration, exhalation);
	
fun curriedOnceInterpolatedSafe duration exhalation = 
	let
		val distance = MEDIUM_DISTANCE
	in
		curryableInterpolatedSafe distance duration exhalation
	end
	
fun curriedTwiceInterpolatedSafe exhalation =
	let
		val duration = MEDIUM_DURATION
	in
		curriedOnceInterpolatedSafe duration exhalation
	end
		
		
	
]]></snapshot>
  </Command>
  <Command __id="23" _type="RunCommand" date="Fri Oct 23 08:14:46 PDT 2020" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1603465420609" timestamp="666254" type="Run" />
  <Command __id="25" _type="ShellCommand" date="Fri Oct 23 08:15:01 PDT 2020" starttimestamp="1603465420609" timestamp="681043" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="24" _type="DiffBasedFileOpenCommand" date="Fri Oct 23 08:14:53 PDT 2020" docASTNodeCount="1" docActiveCodeLength="4236" docExpressionCount="0" docLength="4236" projectName="Assignment3" starttimestamp="1603465420609" timestamp="672853">
    <filePath><![CDATA[/Users/rupinsharma/Desktop/College/Junior/COMP 524/Assignment3/SocialDistance.sml]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"val SMALL_DISTANCE = 6;¶val MEDIUM_DISTANCE = 13;¶val LARGE_DISTANCE = 27;¶¶val SMALL_DURATION = 15;¶val MEDIUM_DURATION = 30;¶val LARGE_DURATION = 120;¶¶val SMALL_EXHALATION = 10;¶val MEDIUM_EXHALATION = 30;¶val LARGE_EXHALATION = 50;¶¶val MAX = 200;¶val ZERO = 0;¶¶val SAFETY_TABLE = [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),(6,15,30)];¶¶fun interpolateDistance(distance, low, medium, high) = ¶	if distance < low then ZERO else¶	if distance >= high then LARGE_DISTANCE else¶	if distance < high andalso distance >= medium then MEDIUM_DISTANCE¶	else SMALL_DISTANCE;¶¶fun interpolateDuration(duration, low, medium, high) =¶	if duration <= low then SMALL_DURATION else¶	if duration > high then MAX else¶	if duration > medium andalso duration <= high then LARGE_DURATION¶	else MEDIUM_DURATION;¶	¶fun interpolateExhalation(exhalation, low, medium, high) =¶	if exhalation <= low then SMALL_EXHALATION else¶	if exhalation > high then MAX else¶	if exhalation > medium andalso exhalation <= high then LARGE_EXHALATION¶	else MEDIUM_EXHALATION;¶¶fun givenSafe(distance, duration, exhalation) = ¶	(distance = MEDIUM_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = MEDIUM_EXHALATION)¶	orelse¶	(distance = SMALL_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = SMALL_EXHALATION)¶	orelse¶	(distance = LARGE_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = LARGE_EXHALATION)¶	orelse¶	(distance = MEDIUM_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = LARGE_EXHALATION)¶	orelse¶	(distance = MEDIUM_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = SMALL_EXHALATION)¶	orelse¶	(distance = LARGE_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = MEDIUM_EXHALATION)¶	orelse¶	(distance = SMALL_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = MEDIUM_EXHALATION);¶	¶fun interpolatedSafe(distance, duration, exhalation) = ¶	let ¶		val interpolatedDistance = interpolateDistance(distance, SMALL_DISTANCE, MEDIUM_DISTANCE, LARGE_DISTANCE)¶		val interpolatedDuration = interpolateDuration(duration, SMALL_DURATION, MEDIUM_DURATION, LARGE_DURATION)¶		val interpolatedExhalation = interpolateExhalation(exhalation, SMALL_EXHALATION, MEDIUM_EXHALATION, LARGE_EXHALATION)¶	in¶		givenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhalation)¶	end¶¶fun¶	derivedIteration (distance, duration, exhalation, nil) = false |¶	derivedIteration (distance, duration, exhalation, ((safeDist, safeDur, safeEx) :: safetyTail)) =¶		if (distance >= safeDist andalso duration <= safeDur andalso exhalation <= safeEx) then¶			true¶		else¶			derivedIteration (distance, duration, exhalation, safetyTail);¶	¶fun listDerivedSafe (distance, duration, exhalation) =¶	derivedIteration(distance, duration, exhalation, SAFETY_TABLE);¶	¶fun printSafety (safetyComputer, (distance, duration, exhalation)) =¶	let¶		val isSafe = safetyComputer(distance, duration, exhalation)	¶	in¶		print ("Distance:"^Int.toString distance^" Duration:"^Int.toString duration^" Exhalation:"^Int.toString exhalation^" Safe:"^Bool.toString isSafe^"\n")¶	end¶	¶fun concisePrintSafety (safetyComputer, (distance, duration, exhalation)) =¶	let¶		val isSafe = safetyComputer(distance, duration, exhalation)	¶	in¶		print ("("^Int.toString distance^","^Int.toString duration^","^Int.toString exhalation^","^Bool.toString isSafe^")\n")¶	end¶	¶fun¶	printIterator(printSafety, safetyComputer, nil) = () | ¶	printIterator(printSafety, safetyComputer, ((distance, duration, exhalation) :: tail)) =¶	(	¶		printSafety(safetyComputer, (distance, duration, exhalation)) ;¶		printIterator(printSafety, safetyComputer, tail)¶	);	¶	¶fun listPrintSafety(printSafety, safetyComputer, listToPrint) =¶	printIterator(printSafety, safetyComputer, listToPrint);¶	¶fun curryableInterpolatedSafe distance duration exhalation =¶	interpolatedSafe(distance, duration, exhalation);¶	¶fun curriedOnceInterpolatedSafe duration exhalation = ¶	let¶		val distance = MEDIUM_DISTANCE¶	in¶		curryableInterpolatedSafe distance duration exhalation¶	end¶	¶fun curriedTwiceInterpolatedSafe exhalation =¶	let¶		val duration = MEDIUM_DURATION¶	in¶		curriedOnceInterpolatedSafe duration exhalation¶	end¶		¶		¶	¶")]]]></diff>
  </Command>
  <Command __id="26" _type="ShellCommand" date="Fri Oct 23 08:19:12 PDT 2020" starttimestamp="1603465420609" timestamp="931630" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="28" _type="ShellCommand" date="Fri Oct 23 08:19:41 PDT 2020" starttimestamp="1603465420609" timestamp="961104" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="29" _type="ShellCommand" date="Fri Oct 23 08:19:42 PDT 2020" starttimestamp="1603465420609" timestamp="962109" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="30" _type="RunCommand" date="Fri Oct 23 08:19:42 PDT 2020" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1603465420609" timestamp="962147" type="Run" />
  <Command __id="31" _type="EHExceptionCommand" date="Fri Oct 23 08:19:42 PDT 2020" starttimestamp="1603465420609" timestamp="962370" type="Exception">
    <outputString><![CDATA[Standard ML of New Jersey (64-bit) v110.98 [built: Thu Jul 16 21:55:53 2020]
- [opening SocialDistance.sml]
val SMALL_DISTANCE = 6 : int
val MEDIUM_DISTANCE = 13 : int
val LARGE_DISTANCE = 27 : int
val SMALL_DURATION = 15 : int
val MEDIUM_DURATION = 30 : int
val LARGE_DURATION = 120 : int
val SMALL_EXHALATION = 10 : int
val MEDIUM_EXHALATION = 30 : int
val LARGE_EXHALATION = 50 : int
val MAX = 200 : int
val ZERO = 0 : int
val SAFETY_TABLE =
  [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),
   (6,15,30)] : (int * int * int) list
val interpolateDistance = fn : int * int * int * int -> int
val interpolateDuration = fn : int * int * int * int -> int
val interpolateExhalation = fn : int * int * int * int -> int
val givenSafe = fn : int * int * int -> bool
val interpolatedSafe = fn : int * int * int -> boolval derivedIteration = fn
                                                     : int * int * int
                                                        * (int * int * int) 
                                                          list
                                                        -> bool
val listDerivedSafe = fn : int * int * int -> bool
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val printSafety = fn : (int * int * int -> bool) * (int * int * int) -> unitval concisePrintSafety =
                                                                              fn
                                                                              : (
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  -> 
                                                                                    bool)
                                                                                 * (
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  * 
                                                                                    int)
                                                                                 -> unitval printIterator =
                                                                                          fn
                                                                                          : ('a
                                                                                              * 'b
                                                                                              -> 'c)
                                                                                             * 'a
                                                                                             * 'b
                                                                                               
                                                                                               list
                                                                                             -> unit
val listPrintSafety = fn : ('a * 'b -> 'c) * 'a * 'b list -> unit
val curryableInterpolatedSafe = fn : int -> int -> int -> bool
val curriedOnceInterpolatedSafe = fn : int -> int -> boolval curriedTwiceInterpolatedSafe =
                                                           fn : int -> bool
val it = () : unit
- ]]></outputString>
  </Command>
  <Command __id="37" _type="DiffBasedFileOpenCommand" date="Fri Oct 23 08:20:01 PDT 2020" docASTNodeCount="60" docActiveCodeLength="525" docExpressionCount="38" docLength="693" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="981291">
    <filePath><![CDATA[/Users/rupinsharma/Desktop/College/Junior/COMP 524/Assignment3Tests/src/test/RunF20A3Tests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package test;

import grader.basics.execution.sml.SMLCommandGeneratorSelector;
import gradingTools.comp524f20.assignment3.F20Assignment3Suite;
//import trace.grader.basics.GraderBasicsTraceUtility;
//import util.trace.Tracer;

public class RunF20A3Tests {

	static final String PROJECT_LOCATION = "/Users/rupinsharma/Desktop/College/Junior/COMP 524/Assignment3";
	public static void main (String[] args) {
		
//		Tracer.showInfo(true);
//		GraderBasicsTraceUtility.setBufferTracedMessages(false);	
		F20Assignment3Suite.setProjectLocation(PROJECT_LOCATION);
		SMLCommandGeneratorSelector.getCommandGenerator().setUserBinary("/usr/local/smlnj/bin/sml");
		F20Assignment3Suite.main(args);

	}
}
]]></snapshot>
  </Command>
  <Command __id="73" _type="ShellCommand" date="Fri Oct 23 08:21:25 PDT 2020" starttimestamp="1603465420609" timestamp="1065198" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="75" _type="ShellCommand" date="Fri Oct 23 08:21:37 PDT 2020" starttimestamp="1603465420609" timestamp="1076526" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="76" _type="ShellCommand" date="Fri Oct 23 11:00:00 PDT 2020" starttimestamp="1603465420609" timestamp="10580378" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="77" _type="ShellCommand" date="Fri Oct 23 11:00:07 PDT 2020" starttimestamp="1603465420609" timestamp="10586717" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="78" _type="ShellCommand" date="Fri Oct 23 11:00:10 PDT 2020" starttimestamp="1603465420609" timestamp="10589486" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="79" _type="RunCommand" date="Fri Oct 23 11:00:10 PDT 2020" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1603465420609" timestamp="10589564" type="Run" />
  <Command __id="80" _type="EHExceptionCommand" date="Fri Oct 23 11:00:10 PDT 2020" starttimestamp="1603465420609" timestamp="10589749" type="Exception">
    <outputString><![CDATA[Standard ML of New Jersey (64-bit) v110.98 [built: Thu Jul 16 21:55:53 2020]
- [opening SocialDistance.sml]
val SMALL_DISTANCE = 6 : int
val MEDIUM_DISTANCE = 13 : int
val LARGE_DISTANCE = 27 : int
val SMALL_DURATION = 15 : int
val MEDIUM_DURATION = 30 : int
val LARGE_DURATION = 120 : int
val SMALL_EXHALATION = 10 : int
val MEDIUM_EXHALATION = 30 : int
val LARGE_EXHALATION = 50 : int
val MAX = 200 : int
val ZERO = 0 : int
val SAFETY_TABLE =
  [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),
   (6,15,30)] : (int * int * int) list
val interpolateDistance = fn : int * int * int * int -> int
val interpolateDuration = fn : int * int * int * int -> int
val interpolateExhalation = fn : int * int * int * int -> int
val givenSafe = fn : int * int * int -> bool
val interpolatedSafe = fn : int * int * int -> boolval derivedIteration = fn
                                                     : int * int * int
                                                        * (int * int * int) 
                                                          list
                                                        -> bool
val listDerivedSafe = fn : int * int * int -> bool
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val printSafety = fn : (int * int * int -> bool) * (int * int * int) -> unitval concisePrintSafety =
                                                                              fn
                                                                              : (
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  -> 
                                                                                    bool)
                                                                                 * (
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  * 
                                                                                    int)
                                                                                 -> unitval printIterator =
                                                                                          fn
                                                                                          : ('a
                                                                                              * 'b
                                                                                              -> 'c)
                                                                                             * 'a
                                                                                             * 'b
                                                                                               
                                                                                               list
                                                                                             -> unit
val listPrintSafety = fn : ('a * 'b -> 'c) * 'a * 'b list -> unit
val curryableInterpolatedSafe = fn : int -> int -> int -> bool
val curriedOnceInterpolatedSafe = fn : int -> int -> boolval curriedTwiceInterpolatedSafe =
                                                           fn : int -> bool
val it = () : unit
- ]]></outputString>
  </Command>
  <Command __id="83" _type="RunCommand" date="Fri Oct 23 11:00:18 PDT 2020" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1603465420609" timestamp="10598364" type="Run" />
  <Command __id="84" _type="ShellCommand" date="Fri Oct 23 11:00:22 PDT 2020" starttimestamp="1603465420609" timestamp="10601949" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="74" _type="DiffBasedFileOpenCommand" date="Fri Oct 23 08:21:27 PDT 2020" docASTNodeCount="1" docActiveCodeLength="4180" docExpressionCount="0" docLength="4180" projectName="Assignment3" starttimestamp="1603465420609" timestamp="1067149">
    <filePath><![CDATA[/Users/rupinsharma/Desktop/College/Junior/COMP 524/Assignment3/SocialDistance.sml]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"val SMALL_DISTANCE = 6;¶val MEDIUM_DISTANCE = 13;¶val LARGE_DISTANCE = 27;¶¶val SMALL_DURATION = 15;¶val MEDIUM_DURATION = 30;¶val LARGE_DURATION = 120;¶¶val SMALL_EXHALATION = 10;¶val MEDIUM_EXHALATION = 30;¶val LARGE_EXHALATION = 50;¶¶val MAX = 200;¶val ZERO = 0;¶¶val SAFETY_TABLE = [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),(6,15,30)];¶¶fun interpolateDistance(distance, low, medium, high) = ¶	if distance < low then ZERO else¶	if distance >= high then LARGE_DISTANCE else¶	if distance < high andalso distance >= medium then MEDIUM_DISTANCE¶	else SMALL_DISTANCE;¶¶fun interpolateDuration(duration, low, medium, high) =¶	if duration <= low then SMALL_DURATION else¶	if duration > high then MAX else¶	if duration > medium andalso duration <= high then LARGE_DURATION¶	else MEDIUM_DURATION;¶	¶fun interpolateExhalation(exhalation, low, medium, high) =¶	if exhalation <= low then SMALL_EXHALATION else¶	if exhalation > high then MAX else¶	if exhalation > medium andalso exhalation <= high then LARGE_EXHALATION¶	else MEDIUM_EXHALATION;¶¶fun givenSafe(distance, duration, exhalation) = ¶	(distance = MEDIUM_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = MEDIUM_EXHALATION)¶	orelse¶	(distance = SMALL_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = SMALL_EXHALATION)¶	orelse¶	(distance = LARGE_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = LARGE_EXHALATION)¶	orelse¶	(distance = MEDIUM_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = LARGE_EXHALATION)¶	orelse¶	(distance = MEDIUM_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = SMALL_EXHALATION)¶	orelse¶	(distance = LARGE_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = MEDIUM_EXHALATION)¶	orelse¶	(distance = SMALL_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = MEDIUM_EXHALATION);¶	¶fun interpolatedSafe(distance, duration, exhalation) = ¶	let ¶		val interpolatedDistance = interpolateDistance(distance, SMALL_DISTANCE, MEDIUM_DISTANCE, LARGE_DISTANCE)¶		val interpolatedDuration = interpolateDuration(duration, SMALL_DURATION, MEDIUM_DURATION, LARGE_DURATION)¶		val interpolatedExhalation = interpolateExhalation(exhalation, SMALL_EXHALATION, MEDIUM_EXHALATION, LARGE_EXHALATION)¶	in¶		givenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhalation)¶	end¶¶fun¶	derivedIteration (distance, duration, exhalation, nil) = false |¶	derivedIteration (distance, duration, exhalation, ((safeDist, safeDur, safeEx) :: safetyTail)) =¶		if (distance >= safeDist andalso duration <= safeDur andalso exhalation <= safeEx) then¶			true¶		else¶			derivedIteration (distance, duration, exhalation, safetyTail);¶	¶fun listDerivedSafe (distance, duration, exhalation) =¶	derivedIteration(distance, duration, exhalation, SAFETY_TABLE);¶	¶fun printSafety (safetyComputer, (distance, duration, exhalation)) =¶	let¶		val isSafe = safetyComputer(distance, duration, exhalation)	¶	in¶		print ("Distance:"^Int.toString distance^" Duration:"^Int.toString duration^" Exhalation:"^Int.toString exhalation^" Safe:"^Bool.toString isSafe^"\n")¶	end¶	¶fun concisePrintSafety (safetyComputer, (distance, duration, exhalation)) =¶	let¶		val isSafe = safetyComputer(distance, duration, exhalation)	¶	in¶		print ("("^Int.toString distance^","^Int.toString duration^","^Int.toString exhalation^","^Bool.toString isSafe^")\n")¶	end¶	¶fun¶	printIterator(printSafety, safetyComputer, nil) = () | ¶	printIterator(printSafety, safetyComputer, ("), Diff(DELETE,"(distance, duration, exhalation)"), Diff(INSERT,"head"), Diff(EQUAL," :: tail)) =¶	(	¶		printSafety(safetyComputer, "), Diff(DELETE,"(distance, duration, exhalation)"), Diff(INSERT,"head"), Diff(EQUAL,") ;¶		printIterator(printSafety, safetyComputer, tail)¶	);	¶	¶fun listPrintSafety(printSafety, safetyComputer, listToPrint) =¶	printIterator(printSafety, safetyComputer, listToPrint);¶	¶fun curryableInterpolatedSafe distance duration exhalation =¶	interpolatedSafe(distance, duration, exhalation);¶	¶fun curriedOnceInterpolatedSafe duration exhalation = ¶	let¶		val distance = MEDIUM_DISTANCE¶	in¶		curryableInterpolatedSafe distance duration exhalation¶	end¶	¶fun curriedTwiceInterpolatedSafe exhalation =¶	let¶		val duration = MEDIUM_DURATION¶	in¶		curriedOnceInterpolatedSafe duration exhalation¶	end¶		¶		¶	¶")]]]></diff>
    <snapshot><![CDATA[val SMALL_DISTANCE = 6;
val MEDIUM_DISTANCE = 13;
val LARGE_DISTANCE = 27;

val SMALL_DURATION = 15;
val MEDIUM_DURATION = 30;
val LARGE_DURATION = 120;

val SMALL_EXHALATION = 10;
val MEDIUM_EXHALATION = 30;
val LARGE_EXHALATION = 50;

val MAX = 200;
val ZERO = 0;

val SAFETY_TABLE = [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),(6,15,30)];

fun interpolateDistance(distance, low, medium, high) = 
	if distance < low then ZERO else
	if distance >= high then LARGE_DISTANCE else
	if distance < high andalso distance >= medium then MEDIUM_DISTANCE
	else SMALL_DISTANCE;

fun interpolateDuration(duration, low, medium, high) =
	if duration <= low then SMALL_DURATION else
	if duration > high then MAX else
	if duration > medium andalso duration <= high then LARGE_DURATION
	else MEDIUM_DURATION;
	
fun interpolateExhalation(exhalation, low, medium, high) =
	if exhalation <= low then SMALL_EXHALATION else
	if exhalation > high then MAX else
	if exhalation > medium andalso exhalation <= high then LARGE_EXHALATION
	else MEDIUM_EXHALATION;

fun givenSafe(distance, duration, exhalation) = 
	(distance = MEDIUM_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = MEDIUM_EXHALATION)
	orelse
	(distance = SMALL_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = SMALL_EXHALATION)
	orelse
	(distance = LARGE_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = LARGE_EXHALATION)
	orelse
	(distance = MEDIUM_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = LARGE_EXHALATION)
	orelse
	(distance = MEDIUM_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = SMALL_EXHALATION)
	orelse
	(distance = LARGE_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = MEDIUM_EXHALATION)
	orelse
	(distance = SMALL_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = MEDIUM_EXHALATION);
	
fun interpolatedSafe(distance, duration, exhalation) = 
	let 
		val interpolatedDistance = interpolateDistance(distance, SMALL_DISTANCE, MEDIUM_DISTANCE, LARGE_DISTANCE)
		val interpolatedDuration = interpolateDuration(duration, SMALL_DURATION, MEDIUM_DURATION, LARGE_DURATION)
		val interpolatedExhalation = interpolateExhalation(exhalation, SMALL_EXHALATION, MEDIUM_EXHALATION, LARGE_EXHALATION)
	in
		givenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhalation)
	end

fun
	derivedIteration (distance, duration, exhalation, nil) = false |
	derivedIteration (distance, duration, exhalation, ((safeDist, safeDur, safeEx) :: safetyTail)) =
		if (distance >= safeDist andalso duration <= safeDur andalso exhalation <= safeEx) then
			true
		else
			derivedIteration (distance, duration, exhalation, safetyTail);
	
fun listDerivedSafe (distance, duration, exhalation) =
	derivedIteration(distance, duration, exhalation, SAFETY_TABLE);
	
fun printSafety (safetyComputer, (distance, duration, exhalation)) =
	let
		val isSafe = safetyComputer(distance, duration, exhalation)	
	in
		print ("Distance:"^Int.toString distance^" Duration:"^Int.toString duration^" Exhalation:"^Int.toString exhalation^" Safe:"^Bool.toString isSafe^"\n")
	end
	
fun concisePrintSafety (safetyComputer, (distance, duration, exhalation)) =
	let
		val isSafe = safetyComputer(distance, duration, exhalation)	
	in
		print ("("^Int.toString distance^","^Int.toString duration^","^Int.toString exhalation^","^Bool.toString isSafe^")\n")
	end
	
fun
	printIterator(printSafety, safetyComputer, nil) = () | 
	printIterator(printSafety, safetyComputer, (head :: tail)) =
	(	
		printSafety(safetyComputer, head) ;
		printIterator(printSafety, safetyComputer, tail)
	);	
	
fun listPrintSafety(printSafety, safetyComputer, listToPrint) =
	printIterator(printSafety, safetyComputer, listToPrint);
	
fun curryableInterpolatedSafe distance duration exhalation =
	interpolatedSafe(distance, duration, exhalation);
	
fun curriedOnceInterpolatedSafe duration exhalation = 
	let
		val distance = MEDIUM_DISTANCE
	in
		curryableInterpolatedSafe distance duration exhalation
	end
	
fun curriedTwiceInterpolatedSafe exhalation =
	let
		val duration = MEDIUM_DURATION
	in
		curriedOnceInterpolatedSafe duration exhalation
	end
		
		
	
]]></snapshot>
  </Command>
  <Command __id="86" _type="DiffBasedFileOpenCommand" date="Fri Oct 23 13:40:51 PDT 2020" docASTNodeCount="1" docActiveCodeLength="4180" docExpressionCount="0" docLength="4180" projectName="Assignment3" starttimestamp="1603465420609" timestamp="20230836">
    <filePath><![CDATA[/Users/rupinsharma/Desktop/College/Junior/COMP 524/Assignment3/SocialDistance.sml]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"val SMALL_DISTANCE = 6;¶val MEDIUM_DISTANCE = 13;¶val LARGE_DISTANCE = 27;¶¶val SMALL_DURATION = 15;¶val MEDIUM_DURATION = 30;¶val LARGE_DURATION = 120;¶¶val SMALL_EXHALATION = 10;¶val MEDIUM_EXHALATION = 30;¶val LARGE_EXHALATION = 50;¶¶val MAX = 200;¶val ZERO = 0;¶¶val SAFETY_TABLE = [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),(6,15,30)];¶¶fun interpolateDistance(distance, low, medium, high) = ¶	if distance < low then ZERO else¶	if distance >= high then LARGE_DISTANCE else¶	if distance < high andalso distance >= medium then MEDIUM_DISTANCE¶	else SMALL_DISTANCE;¶¶fun interpolateDuration(duration, low, medium, high) =¶	if duration <= low then SMALL_DURATION else¶	if duration > high then MAX else¶	if duration > medium andalso duration <= high then LARGE_DURATION¶	else MEDIUM_DURATION;¶	¶fun interpolateExhalation(exhalation, low, medium, high) =¶	if exhalation <= low then SMALL_EXHALATION else¶	if exhalation > high then MAX else¶	if exhalation > medium andalso exhalation <= high then LARGE_EXHALATION¶	else MEDIUM_EXHALATION;¶¶fun givenSafe(distance, duration, exhalation) = ¶	(distance = MEDIUM_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = MEDIUM_EXHALATION)¶	orelse¶	(distance = SMALL_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = SMALL_EXHALATION)¶	orelse¶	(distance = LARGE_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = LARGE_EXHALATION)¶	orelse¶	(distance = MEDIUM_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = LARGE_EXHALATION)¶	orelse¶	(distance = MEDIUM_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = SMALL_EXHALATION)¶	orelse¶	(distance = LARGE_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = MEDIUM_EXHALATION)¶	orelse¶	(distance = SMALL_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = MEDIUM_EXHALATION);¶	¶fun interpolatedSafe(distance, duration, exhalation) = ¶	let ¶		val interpolatedDistance = interpolateDistance(distance, SMALL_DISTANCE, MEDIUM_DISTANCE, LARGE_DISTANCE)¶		val interpolatedDuration = interpolateDuration(duration, SMALL_DURATION, MEDIUM_DURATION, LARGE_DURATION)¶		val interpolatedExhalation = interpolateExhalation(exhalation, SMALL_EXHALATION, MEDIUM_EXHALATION, LARGE_EXHALATION)¶	in¶		givenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhalation)¶	end¶¶fun¶	derivedIteration (distance, duration, exhalation, nil) = false |¶	derivedIteration (distance, duration, exhalation, ((safeDist, safeDur, safeEx) :: safetyTail)) =¶		if (distance >= safeDist andalso duration <= safeDur andalso exhalation <= safeEx) then¶			true¶		else¶			derivedIteration (distance, duration, exhalation, safetyTail);¶	¶fun listDerivedSafe (distance, duration, exhalation) =¶	derivedIteration(distance, duration, exhalation, SAFETY_TABLE);¶	¶fun printSafety (safetyComputer, (distance, duration, exhalation)) =¶	let¶		val isSafe = safetyComputer(distance, duration, exhalation)	¶	in¶		print ("Distance:"^Int.toString distance^" Duration:"^Int.toString duration^" Exhalation:"^Int.toString exhalation^" Safe:"^Bool.toString isSafe^"\n")¶	end¶	¶fun concisePrintSafety (safetyComputer, (distance, duration, exhalation)) =¶	let¶		val isSafe = safetyComputer(distance, duration, exhalation)	¶	in¶		print ("("^Int.toString distance^","^Int.toString duration^","^Int.toString exhalation^","^Bool.toString isSafe^")\n")¶	end¶	¶fun¶	printIterator(printSafety, safetyComputer, nil) = () | ¶	printIterator(printSafety, safetyComputer, (head :: tail)) =¶	(	¶		printSafety(safetyComputer, head) ;¶		printIterator(printSafety, safetyComputer, tail)¶	);	¶	¶fun listPrintSafety(printSafety, safetyComputer, listToPrint) =¶	printIterator(printSafety, safetyComputer, listToPrint);¶	¶fun curryableInterpolatedSafe distance duration exhalation =¶	interpolatedSafe(distance, duration, exhalation);¶	¶fun curriedOnceInterpolatedSafe duration exhalation = ¶	let¶		val distance = MEDIUM_DISTANCE¶	in¶		curryableInterpolatedSafe distance duration exhalation¶	end¶	¶fun curriedTwiceInterpolatedSafe exhalation =¶	let¶		val duration = MEDIUM_DURATION¶	in¶		curriedOnceInterpolatedSafe duration exhalation¶	end¶		¶		¶	¶")]]]></diff>
  </Command>
  <Command __id="85" _type="ShellCommand" date="Fri Oct 23 13:40:43 PDT 2020" starttimestamp="1603465420609" timestamp="20222505" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="88" _type="ShellCommand" date="Fri Oct 23 13:47:21 PDT 2020" starttimestamp="1603465420609" timestamp="20621097" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="89" _type="ShellCommand" date="Fri Oct 23 13:47:56 PDT 2020" starttimestamp="1603465420609" timestamp="20655836" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="90" _type="ShellCommand" date="Fri Oct 23 13:49:05 PDT 2020" starttimestamp="1603465420609" timestamp="20725299" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="91" _type="ShellCommand" date="Fri Oct 23 13:49:06 PDT 2020" starttimestamp="1603465420609" timestamp="20726208" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="92" _type="RunCommand" date="Fri Oct 23 13:49:06 PDT 2020" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1603465420609" timestamp="20726245" type="Run" />
  <Command __id="93" _type="EHExceptionCommand" date="Fri Oct 23 13:49:06 PDT 2020" starttimestamp="1603465420609" timestamp="20726373" type="Exception">
    <outputString><![CDATA[Standard ML of New Jersey (64-bit) v110.98 [built: Thu Jul 16 21:55:53 2020]
- [opening SocialDistance.sml]
val SMALL_DISTANCE = 6 : int
val MEDIUM_DISTANCE = 13 : int
val LARGE_DISTANCE = 27 : int
val SMALL_DURATION = 15 : int
val MEDIUM_DURATION = 30 : int
val LARGE_DURATION = 120 : int
val SMALL_EXHALATION = 10 : int
val MEDIUM_EXHALATION = 30 : int
val LARGE_EXHALATION = 50 : int
val MAX = 200 : int
val ZERO = 0 : int
val SAFETY_TABLE =
  [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),
   (6,15,30)] : (int * int * int) list
val interpolateDistance = fn : int * int * int * int -> int
val interpolateDuration = fn : int * int * int * int -> int
val interpolateExhalation = fn : int * int * int * int -> int
val givenSafe = fn : int * int * int -> bool
val interpolatedSafe = fn : int * int * int -> boolval derivedIteration = fn
                                                     : int * int * int
                                                        * (int * int * int) 
                                                          list
                                                        -> bool
val listDerivedSafe = fn : int * int * int -> bool
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val printSafety = fn : (int * int * int -> bool) * (int * int * int) -> unitval concisePrintSafety =
                                                                              fn
                                                                              : (
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  -> 
                                                                                    bool)
                                                                                 * (
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  * 
                                                                                    int)
                                                                                 -> unitval printIterator =
                                                                                          fn
                                                                                          : ('a
                                                                                              * 'b
                                                                                              -> 'c)
                                                                                             * 'a
                                                                                             * 'b
                                                                                               
                                                                                               list
                                                                                             -> unit
]]></outputString>
  </Command>
  <Command __id="94" _type="EHExceptionCommand" date="Fri Oct 23 13:49:07 PDT 2020" starttimestamp="1603465420609" timestamp="20726431" type="Exception">
    <outputString><![CDATA[val listPrintSafety = fn : ('a * 'b -> 'c) * 'a * 'b list -> unit
val matchingSafeIterator = fn
  : (('a * 'b * 'c) * ('d * 'e * 'f) -> bool) * ('a * 'b * 'c)
     * ('d * 'e * 'f) list
     -> bool
val matchingSafe = fn
  : (('a * 'b * 'c) * (int * int * int) -> bool) * ('a * 'b * 'c) -> bool
val derivedSafeMatcher = fn : (int * int * int) * (int * int * int) -> bool
SocialDistance.sml:114.15 Warning: calling polyEqual

SocialDistance.sml:114.43 Warning: calling polyEqual

SocialDistance.sml:114.72 Warning: calling polyEqual

val givenSafeMatcher = fn : (''a * ''b * ''c) * (''a * ''b * ''c) -> boolval matchingDerivedSafe =
                                                                           fn
                                                                           : 
                                                                                int
                                                                              * 
                                                                                int
                                                                              * 
                                                                                int
                                                                              -> 
                                                                                bool
val matchingGivenSafe = fn : int * int * int -> bool
val curryableInterpolatedSafe = fn : int -> int -> int -> bool
val curriedOnceInterpolatedSafe = fn : int -> int -> boolval curriedTwiceInterpolatedSafe =
                                                           fn : int -> bool
val it = () : unit
- ]]></outputString>
  </Command>
  <Command __id="95" _type="EHExceptionCommand" date="Fri Oct 23 13:49:15 PDT 2020" starttimestamp="1603465420609" timestamp="20734800" type="Exception">
    <outputString><![CDATA[matchingGivenSafe;
]]></outputString>
  </Command>
  <Command __id="96" _type="EHExceptionCommand" date="Fri Oct 23 13:49:15 PDT 2020" starttimestamp="1603465420609" timestamp="20734857" type="Exception">
    <outputString><![CDATA[val it = fn : int * int * int -> bool
- ]]></outputString>
  </Command>
  <Command __id="97" _type="EHExceptionCommand" date="Fri Oct 23 13:49:23 PDT 2020" starttimestamp="1603465420609" timestamp="20742506" type="Exception">
    <outputString><![CDATA[matchingGivenSafe(13, 30, 30);
]]></outputString>
  </Command>
  <Command __id="98" _type="EHExceptionCommand" date="Fri Oct 23 13:49:23 PDT 2020" starttimestamp="1603465420609" timestamp="20742561" type="Exception">
    <outputString><![CDATA[val it = true : bool
- ]]></outputString>
  </Command>
  <Command __id="99" _type="EHExceptionCommand" date="Fri Oct 23 13:49:29 PDT 2020" starttimestamp="1603465420609" timestamp="20748996" type="Exception">
    <outputString><![CDATA[matchingGivenSafe(13, 29, 29);
]]></outputString>
  </Command>
  <Command __id="100" _type="EHExceptionCommand" date="Fri Oct 23 13:49:29 PDT 2020" starttimestamp="1603465420609" timestamp="20749051" type="Exception">
    <outputString><![CDATA[val it = false : bool
- ]]></outputString>
  </Command>
  <Command __id="101" _type="EHExceptionCommand" date="Fri Oct 23 13:49:34 PDT 2020" starttimestamp="1603465420609" timestamp="20753908" type="Exception">
    <outputString><![CDATA[matchingDerivedSafe;
]]></outputString>
  </Command>
  <Command __id="102" _type="EHExceptionCommand" date="Fri Oct 23 13:49:34 PDT 2020" starttimestamp="1603465420609" timestamp="20753965" type="Exception">
    <outputString><![CDATA[val it = fn : int * int * int -> bool
- ]]></outputString>
  </Command>
  <Command __id="103" _type="EHExceptionCommand" date="Fri Oct 23 13:49:39 PDT 2020" starttimestamp="1603465420609" timestamp="20758926" type="Exception">
    <outputString><![CDATA[givenSafeMatcherl
]]></outputString>
  </Command>
  <Command __id="104" _type="EHExceptionCommand" date="Fri Oct 23 13:49:41 PDT 2020" starttimestamp="1603465420609" timestamp="20760710" type="Exception">
    <outputString><![CDATA[= ;
]]></outputString>
  </Command>
  <Command __id="105" _type="EHExceptionCommand" date="Fri Oct 23 13:49:41 PDT 2020" starttimestamp="1603465420609" timestamp="20760764" type="Exception">
    <outputString><![CDATA[stdIn:6.1-6.18 Error: unbound variable or constructor: givenSafeMatcherl

- ]]></outputString>
  </Command>
  <Command __id="109" _type="DiffBasedFileOpenCommand" date="Fri Oct 23 13:49:51 PDT 2020" docASTNodeCount="60" docActiveCodeLength="525" docExpressionCount="38" docLength="693" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="20771160">
    <filePath><![CDATA[/Users/rupinsharma/Desktop/College/Junior/COMP 524/Assignment3Tests/src/test/RunF20A3Tests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package test;¶¶import grader.basics.execution.sml.SMLCommandGeneratorSelector;¶import gradingTools.comp524f20.assignment3.F20Assignment3Suite;¶//import trace.grader.basics.GraderBasicsTraceUtility;¶//import util.trace.Tracer;¶¶public class RunF20A3Tests {¶¶	static final String PROJECT_LOCATION = "/Users/rupinsharma/Desktop/College/Junior/COMP 524/Assignment3";¶	public static void main (String[] args) {¶		¶//		Tracer.showInfo(true);¶//		GraderBasicsTraceUtility.setBufferTracedMessages(false);	¶		F20Assignment3Suite.setProjectLocation(PROJECT_LOCATION);¶		SMLCommandGeneratorSelector.getCommandGenerator().setUserBinary("/usr/local/smlnj/bin/sml");¶		F20Assignment3Suite.main(args);¶¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="145" _type="RunCommand" date="Fri Oct 23 13:50:43 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="20822711" type="Run" />
  <Command __id="146" _type="RunCommand" date="Fri Oct 23 13:50:43 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="20822711" type="Run" />
  <Command __id="147" _type="EHExceptionCommand" date="Fri Oct 23 13:50:43 PDT 2020" starttimestamp="1603465420609" timestamp="20822978" type="Exception">
    <outputString><![CDATA[Buffer traced messages =true
]]></outputString>
  </Command>
  <Command __id="148" _type="ShellCommand" date="Fri Oct 23 13:50:43 PDT 2020" starttimestamp="1603465420609" timestamp="20823139" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="150" _type="RunCommand" date="Fri Oct 23 13:50:54 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="20834021" type="Run" />
  <Command __id="151" _type="RunCommand" date="Fri Oct 23 13:50:54 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="20834022" type="Run" />
  <Command __id="152" _type="ShellCommand" date="Fri Oct 23 13:50:54 PDT 2020" starttimestamp="1603465420609" timestamp="20834037" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="153" _type="ShellCommand" date="Fri Oct 23 13:50:55 PDT 2020" starttimestamp="1603465420609" timestamp="20834819" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="155" _type="RunCommand" date="Fri Oct 23 13:53:25 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="20984905" type="Run" />
  <Command __id="156" _type="RunCommand" date="Fri Oct 23 13:53:25 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="20984905" type="Run" />
  <Command __id="157" _type="EHExceptionCommand" date="Fri Oct 23 13:53:25 PDT 2020" starttimestamp="1603465420609" timestamp="20985230" type="Exception">
    <outputString><![CDATA[Buffer traced messages =true
]]></outputString>
  </Command>
  <Command __id="158" _type="ShellCommand" date="Fri Oct 23 13:53:25 PDT 2020" starttimestamp="1603465420609" timestamp="20985347" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="159" _type="EHExceptionCommand" date="Fri Oct 23 13:53:27 PDT 2020" starttimestamp="1603465420609" timestamp="20986659" type="Exception">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Sun Aug 23 09:32:35 EDT 2020). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
]]></outputString>
  </Command>
  <Command __id="160" _type="EHExceptionCommand" date="Fri Oct 23 13:53:30 PDT 2020" starttimestamp="1603465420609" timestamp="20990217" type="Exception">
    <outputString><![CDATA[Running junit test:CurriedOnceInterpolatedSafe
Running junit test:SocialDistanceSMLProvided
]]></outputString>
  </Command>
  <Command __id="161" _type="EHExceptionCommand" date="Fri Oct 23 13:53:31 PDT 2020" starttimestamp="1603465420609" timestamp="20990799" type="Exception">
    <outputString><![CDATA[
Testing CurriedOnceInterpolatedSafe with the following inputs:
"print("Results:");" "curriedOnceInterpolatedSafe 30 30;" "curriedOnceInterpolatedSafe 15 50;" "curriedOnceInterpolatedSafe 120 10;" "curriedOnceInterpolatedSafe 29 30;" "curriedOnceInterpolatedSafe 15 49;" "curriedOnceInterpolatedSafe 119 10;" "curriedOnceInterpolatedSafe 29 29;" 
"curriedOnceInterpolatedSafe 14 49;" "curriedOnceInterpolatedSafe 119 9;" "curriedOnceInterpolatedSafe 120 30;" "curriedOnceInterpolatedSafe 30 50;" "curriedOnceInterpolatedSafe 120 50;" "curriedOnceInterpolatedSafe 30 31;" "curriedOnceInterpolatedSafe 16 50;" "curriedOnceInterpolatedSafe 121 11;" 
"val curryTest =curriedOnceInterpolatedSafe 30;" "curryTest 30;" "curryTest 31;" 

Collected output:
0                                                                                   bool
1 - Results:val it = () : unit
2 val it = true : bool
3 val it = true : bool
4 val it = true : bool
5 val it = true : bool
6 val it = true : bool
7 val it = true : bool
8 val it = true : bool
9 val it = true : bool
10 val it = true : bool
11 val it = false : bool
12 val it = false : bool
13 val it = false : bool
14 val it = false : bool
15 val it = false : bool
16 val it = false : bool
17 val curryTest = fn : int -> bool
18 val it = true : bool
19 val it = false : bool

Output line: "2" matches regex: .*true.*
Output line: "3" matches regex: .*true.*
Output line: "4" matches regex: .*true.*
Output line: "5" matches regex: .*true.*
Output line: "6" matches regex: .*true.*
Output line: "7" matches regex: .*true.*
Output line: "8" matches regex: .*true.*
Output line: "9" matches regex: .*true.*
Output line: "10" matches regex: .*true.*
Output line: "11" matches regex: .*false.*
Output line: "12" matches regex: .*false.*
Output line: "13" matches regex: .*false.*
Output line: "14" matches regex: .*false.*
Output line: "15" matches regex: .*false.*
Output line: "16" matches regex: .*false.*
Output line: "18" matches regex: .*true.*
Output line: "19" matches regex: .*false.*
Running junit test:CurriedTwiceInterpolatedSafe
]]></outputString>
  </Command>
  <Command __id="162" _type="EHExceptionCommand" date="Fri Oct 23 13:53:31 PDT 2020" starttimestamp="1603465420609" timestamp="20991332" type="Exception">
    <outputString><![CDATA[
Testing CurriedTwiceInterpolatedSafe with the following inputs:
"print("Results:");" "curriedTwiceInterpolatedSafe 30;" "curriedTwiceInterpolatedSafe 29;" "curriedTwiceInterpolatedSafe 11;" "curriedTwiceInterpolatedSafe 10;" "curriedTwiceInterpolatedSafe 9;" "curriedTwiceInterpolatedSafe 50;" "curriedTwiceInterpolatedSafe 49;" 
"curriedTwiceInterpolatedSafe 51;" 

Collected output:
0                                                                                   bool
1 - Results:val it = () : unit
2 val it = true : bool
3 val it = true : bool
4 val it = true : bool
5 val it = false : bool
6 val it = false : bool
7 val it = false : bool
8 val it = false : bool
9 val it = false : bool

Output line: "2" matches regex: .*true.*
Output line: "3" matches regex: .*true.*
Output line: "4" matches regex: .*true.*
Output line: "5" matches regex: .*false.*
Output line: "6" matches regex: .*false.*
Output line: "7" matches regex: .*false.*
Output line: "8" matches regex: .*false.*
Output line: "9" matches regex: .*false.*
Running junit test:CurryableInterpolatedSafe
]]></outputString>
  </Command>
  <Command __id="163" _type="EHExceptionCommand" date="Fri Oct 23 13:53:32 PDT 2020" starttimestamp="1603465420609" timestamp="20991963" type="Exception">
    <outputString><![CDATA[
Testing CurryableInterpolatedSafe with the following inputs:
"print("Results:");" "curryableInterpolatedSafe 13 30 30;" "curryableInterpolatedSafe 6 30 10;" "curryableInterpolatedSafe 27 30 50;" "curryableInterpolatedSafe 13 15 50;" "curryableInterpolatedSafe 13 120 10;" "curryableInterpolatedSafe 27 120 30;" "curryableInterpolatedSafe 6 15 30;" 
"curryableInterpolatedSafe 14 30 30;" "curryableInterpolatedSafe 7 30 10;" "curryableInterpolatedSafe 27 29 50;" "curryableInterpolatedSafe 13 14 50;" "curryableInterpolatedSafe 13 120 9;" "curryableInterpolatedSafe 27 120 29;" "curryableInterpolatedSafe 7 15 30;" "curryableInterpolatedSafe 14 29 29;" 
"curryableInterpolatedSafe 7 29 9;" "curryableInterpolatedSafe 28 29 49;" "curryableInterpolatedSafe 14 14 49;" "curryableInterpolatedSafe 14 119 9;" "curryableInterpolatedSafe 28 119 29;" "curryableInterpolatedSafe 7 14 29;" "curryableInterpolatedSafe 26 30 30;" "curryableInterpolatedSafe 12 30 10;" 
"curryableInterpolatedSafe 27 16 50;" "curryableInterpolatedSafe 13 0 50;" "curryableInterpolatedSafe 13 120 0;" "curryableInterpolatedSafe 27 120 11;" "curryableInterpolatedSafe 12 15 30;" "curryableInterpolatedSafe 26 16 11;" "curryableInterpolatedSafe 12 16 0;" "curryableInterpolatedSafe 500 16 31;" 
"curryableInterpolatedSafe 26 0 31;" "curryableInterpolatedSafe 26 31 0;" "curryableInterpolatedSafe 500 31 11;" "curryableInterpolatedSafe 12 0 11;" "curryableInterpolatedSafe 6 15 10;" "curryableInterpolatedSafe 6 15 50;" "curryableInterpolatedSafe 6 30 30;" "curryableInterpolatedSafe 6 30 50;" 
"curryableInterpolatedSafe 6 120 10;" "curryableInterpolatedSafe 6 120 30;" "curryableInterpolatedSafe 6 120 50;" "curryableInterpolatedSafe 13 15 10;" "curryableInterpolatedSafe 13 15 30;" "curryableInterpolatedSafe 13 30 10;" "curryableInterpolatedSafe 13 30 50;" "curryableInterpolatedSafe 13 120 30;" 
"curryableInterpolatedSafe 13 120 50;" "curryableInterpolatedSafe 27 15 10;" "curryableInterpolatedSafe 27 15 30;" "curryableInterpolatedSafe 27 15 50;" "curryableInterpolatedSafe 27 30 10;" "curryableInterpolatedSafe 27 30 30;" "curryableInterpolatedSafe 27 120 10;" "curryableInterpolatedSafe 27 120 50;" 
"curryableInterpolatedSafe 27 500 50;" "curryableInterpolatedSafe 27 120 500;" "curryableInterpolatedSafe 5 15 30;" "curryableInterpolatedSafe 13 121 10;" "curryableInterpolatedSafe 27 120 31;" "curryableInterpolatedSafe 0 15 10;" "curryableInterpolatedSafe 6 15 500;" "curryableInterpolatedSafe 500 500 500;" 
"curryableInterpolatedSafe 128 128 128;" "curryableInterpolatedSafe 0 0 50;" "curryableInterpolatedSafe 13 0 51;" "curryableInterpolatedSafe 0 0 0;" "curryableInterpolatedSafe 20 22 50;" "curryableInterpolatedSafe 26 121 51;" "val curried = curryableInterpolatedSafe 13;" "curried 29 29;" 
"curried 30 1;" 

Collected output:
0                                                                                   bool
1 - Results:val it = () : unit
2 val it = true : bool
3 val it = true : bool
4 val it = true : bool
5 val it = true : bool
6 val it = true : bool
7 val it = true : bool
8 val it = true : bool
9 val it = true : bool
10 val it = true : bool
11 val it = true : bool
12 val it = true : bool
13 val it = true : bool
14 val it = true : bool
15 val it = true : bool
16 val it = true : bool
17 val it = true : bool
18 val it = true : bool
19 val it = true : bool
20 val it = true : bool
21 val it = true : bool
22 val it = true : bool
23 val it = true : bool
24 val it = true : bool
25 val it = true : bool
26 val it = true : bool
27 val it = true : bool
28 val it = true : bool
29 val it = true : bool
30 val it = true : bool
31 val it = true : bool
32 val it = true : bool
33 val it = true : bool
34 val it = true : bool
35 val it = true : bool
36 val it = true : bool
37 val it = false : bool
38 val it = false : bool
39 val it = false : bool
40 val it = false : bool
41 val it = false : bool
42 val it = false : bool
43 val it = false : bool
44 val it = false : bool
45 val it = false : bool
46 val it = false : bool
47 val it = false : bool
48 val it = false : bool
49 val it = false : bool
50 val it = false : bool
51 val it = false : bool
52 val it = false : bool
53 val it = false : bool
54 val it = false : bool
55 val it = false : bool
56 val it = false : bool
57 val it = false : bool
58 val it = false : bool
59 val it = false : bool
60 val it = false : bool
61 val it = false : bool
62 val it = false : bool
63 val it = false : bool
64 val it = false : bool
65 val it = false : bool
66 val it = false : bool
67 val it = false : bool
68 val it = false : bool
69 val it = false : bool
70 val it = false : bool
71 val curried = fn : int -> int -> bool
72 val it = true : bool
73 val it = false : bool

Output line: "2" matches regex: .*true.*
Output line: "3" matches regex: .*true.*
Output line: "4" matches regex: .*true.*
Output line: "5" matches regex: .*true.*
Output line: "6" matches regex: .*true.*
Output line: "7" matches regex: .*true.*
Output line: "8" matches regex: .*true.*
Output line: "9" matches regex: .*true.*
Output line: "10" matches regex: .*true.*
Output line: "11" matches regex: .*true.*
Output line: "12" matches regex: .*true.*
Output line: "13" matches regex: .*true.*
Output line: "14" matches regex: .*true.*
Output line: "15" matches regex: .*true.*
Output line: "16" matches regex: .*true.*
Output line: "17" matches regex: .*true.*
Output line: "18" matches regex: .*true.*
Output line: "19" matches regex: .*true.*
Output line: "20" matches regex: .*true.*
Output line: "21" matches regex: .*true.*
Output line: "22" matches regex: .*true.*
Output line: "23" matches regex: .*true.*
Output line: "24" matches regex: .*true.*
Output line: "25" matches regex: .*true.*
Output line: "26" matches regex: .*true.*
Output line: "27" matches regex: .*true.*
Output line: "28" matches regex: .*true.*
Output line: "29" matches regex: .*true.*
Output line: "30" matches regex: .*true.*
Output line: "31" matches regex: .*true.*
Output line: "32" matches regex: .*true.*
Output line: "33" matches regex: .*true.*
Output line: "34" matches regex: .*true.*
Output line: "35" matches regex: .*true.*
Output line: "36" matches regex: .*true.*
Output line: "37" matches regex: .*false.*
Output line: "38" matches regex: .*false.*
Output line: "39" matches regex: .*false.*
Output line: "40" matches regex: .*false.*
Output line: "41" matches regex: .*false.*
Output line: "42" matches regex: .*false.*
Output line: "43" matches regex: .*false.*
Output line: "44" matches regex: .*false.*
Output line: "45" matches regex: .*false.*
Output line: "46" matches regex: .*false.*
Output line: "47" matches regex: .*false.*
Output line: "48" matches regex: .*false.*
Output line: "49" matches regex: .*false.*
Output line: "50" matches regex: .*false.*
Output line: "51" matches regex: .*false.*
Output line: "52" matches regex: .*false.*
Output line: "53" matches regex: .*false.*
Output line: "54" matches regex: .*false.*
Output line: "55" matches regex: .*false.*
Output line: "56" matches regex: .*false.*
Output line: "57" matches regex: .*false.*
Output line: "58" matches regex: .*false.*
Output line: "59" matches regex: .*false.*
Output line: "60" matches regex: .*false.*
Output line: "61" matches regex: .*false.*
Output line: "62" matches regex: .*false.*
Output line: "63" matches regex: .*false.*
Output line: "64" matches regex: .*false.*
Output line: "65" matches regex: .*false.*
Output line: "66" matches regex: .*false.*
Output line: "67" matches regex: .*false.*
Output line: "68" matches regex: .*false.*
Output line: "69" matches regex: .*false.*
Output line: "70" matches regex: .*false.*
Output line: "72" matches regex: .*true.*
Output line: "73" matches regex: .*false.*
Running junit test:CurryableMatchingSafe
]]></outputString>
  </Command>
  <Command __id="164" _type="EHExceptionCommand" date="Fri Oct 23 13:53:33 PDT 2020" starttimestamp="1603465420609" timestamp="20992493" type="Exception">
    <outputString><![CDATA[
Testing CurryableMatchingSafe with the following inputs:
"print("Results:");" "curriedTestCall (30,30,13);" "curriedTestCall (10,30,6);" "curriedTestCall (50,30,27);" "curriedTestCall (50,15,13);" "curriedTestCall (10,120,13);" "curriedTestCall (30,120,27);" "curriedTestCall (30,15,6);" 
"curriedTestCall (30,30,14);" "curriedTestCall (10,30,7);" "curriedTestCall (50,29,27);" "curriedTestCall (50,14,13);" "curriedTestCall (9,120,13);" "curriedTestCall (29,120,27);" "curriedTestCall (30,15,7);" "curriedTestCall (29,29,14);" 
"curriedTestCall (9,29,7);" "curriedTestCall (49,29,28);" "curriedTestCall (49,14,14);" "curriedTestCall (9,119,14);" "curriedTestCall (29,119,28);" "curriedTestCall (29,14,7);" java.lang.AssertionError: View console for more detail%0.0
"curriedTestCall (30,30,26);" "curriedTestCall (10,30,12);" 
"curriedTestCall (50,16,27);" "curriedTestCall (50,0,13);" "curriedTestCall (0,120,13);" "curriedTestCall (11,120,27);" "curriedTestCall (30,15,12);" "curriedTestCall (11,16,26);" "curriedTestCall (0,16,12);" "curriedTestCall (31,16,500);" 
"curriedTestCall (31,0,26);" "curriedTestCall (0,31,26);" "curriedTestCall (11,31,500);" "curriedTestCall (11,0,12);" "curriedTestCall (10,15,6);" "curriedTestCall (50,15,6);" "curriedTestCall (30,30,6);" "curriedTestCall (50,30,6);" 
"curriedTestCall (10,120,6);" "curriedTestCall (30,120,6);" "curriedTestCall (50,120,6);" "curriedTestCall (10,15,13);" "curriedTestCall (30,15,13);" "curriedTestCall (10,30,13);" "curriedTestCall (50,30,13);" "curriedTestCall (30,120,13);" 
"curriedTestCall (50,120,13);" "curriedTestCall (10,15,27);" "curriedTestCall (30,15,27);" "curriedTestCall (50,15,27);" "curriedTestCall (10,30,27);" "curriedTestCall (30,30,27);" "curriedTestCall (10,120,27);" "curriedTestCall (50,120,27);" 
"curriedTestCall (50,500,27);" "curriedTestCall (500,120,27);" "curriedTestCall (30,15,5);" "curriedTestCall (10,121,13);" "curriedTestCall (31,120,27);" "curriedTestCall (10,15,0);" "curriedTestCall (500,15,6);" "curriedTestCall (500,500,500);" 
"curriedTestCall (128,128,128);" "curriedTestCall (50,0,0);" "curriedTestCall (51,0,13);" "curriedTestCall (0,0,0);" "curriedTestCall (50,22,20);" "curriedTestCall (51,121,26);" 

Collected output:
0 val curriedTestCall = fn : int -> int -> int -> bool
1 Results:val it = () : unit
2 stdIn:4.1-4.27 Error: operator and operand do not agree [tycon mismatch]
3   operator domain: int
4   operand:         'Z[INT] * 'Y[INT] * 'X[INT]
5   in expression:
6     curriedTestCall (30,30,13)
7 
8 - 

Regex: ".*true.*" not found, all following regexs not checked
Note: All regex's are assumed to be in sequential order
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.junit.BasicJUnitUtils.assertTrue(BasicJUnitUtils.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:113)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Test Failed:View console for more detail%0.0
Steps traced since last test:

Running junit test:CurriedMatchingDerivedSafe
java.lang.AssertionError: CurriedMatchingSafe Must Pass first%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.junit.BasicJUnitUtils.assertTrue(BasicJUnitUtils.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:113)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Test Failed:CurriedMatchingSafe Must Pass first%0.0
Steps traced since last test:

Running junit test:CurriedMatchingGivenSafe
java.lang.AssertionError: CurriedMatchingSafe Must Pass first%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.junit.BasicJUnitUtils.assertTrue(BasicJUnitUtils.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:113)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Test Failed:CurriedMatchingSafe Must Pass first%0.0
Steps traced since last test:

]]></outputString>
  </Command>
  <Command __id="166" _type="RunCommand" date="Fri Oct 23 13:53:48 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="21007755" type="Run" />
  <Command __id="167" _type="RunCommand" date="Fri Oct 23 13:53:48 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="21007755" type="Run" />
  <Command __id="168" _type="ShellCommand" date="Fri Oct 23 13:53:48 PDT 2020" starttimestamp="1603465420609" timestamp="21007830" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="169" _type="ShellCommand" date="Fri Oct 23 13:53:49 PDT 2020" starttimestamp="1603465420609" timestamp="21008562" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="170" _type="ShellCommand" date="Fri Oct 23 13:53:54 PDT 2020" starttimestamp="1603465420609" timestamp="21013576" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="171" _type="ShellCommand" date="Fri Oct 23 13:55:15 PDT 2020" starttimestamp="1603465420609" timestamp="21095111" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="144" _type="DiffBasedFileOpenCommand" date="Fri Oct 23 13:50:23 PDT 2020" docASTNodeCount="1" docActiveCodeLength="5396" docExpressionCount="0" docLength="5396" projectName="Assignment3" starttimestamp="1603465420609" timestamp="20802984">
    <filePath><![CDATA[/Users/rupinsharma/Desktop/College/Junior/COMP 524/Assignment3/SocialDistance.sml]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"val SMALL_DISTANCE = 6;¶val MEDIUM_DISTANCE = 13;¶val LARGE_DISTANCE = 27;¶¶val SMALL_DURATION = 15;¶val MEDIUM_DURATION = 30;¶val LARGE_DURATION = 120;¶¶val SMALL_EXHALATION = 10;¶val MEDIUM_EXHALATION = 30;¶val LARGE_EXHALATION = 50;¶¶val MAX = 200;¶val ZERO = 0;¶¶val SAFETY_TABLE = [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),(6,15,30)];¶¶fun interpolateDistance(distance, low, medium, high) = ¶	if distance < low then ZERO else¶	if distance >= high then LARGE_DISTANCE else¶	if distance < high andalso distance >= medium then MEDIUM_DISTANCE¶	else SMALL_DISTANCE;¶¶fun interpolateDuration(duration, low, medium, high) =¶	if duration <= low then SMALL_DURATION else¶	if duration > high then MAX else¶	if duration > medium andalso duration <= high then LARGE_DURATION¶	else MEDIUM_DURATION;¶	¶fun interpolateExhalation(exhalation, low, medium, high) =¶	if exhalation <= low then SMALL_EXHALATION else¶	if exhalation > high then MAX else¶	if exhalation > medium andalso exhalation <= high then LARGE_EXHALATION¶	else MEDIUM_EXHALATION;¶¶fun givenSafe(distance, duration, exhalation) = ¶	(distance = MEDIUM_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = MEDIUM_EXHALATION)¶	orelse¶	(distance = SMALL_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = SMALL_EXHALATION)¶	orelse¶	(distance = LARGE_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = LARGE_EXHALATION)¶	orelse¶	(distance = MEDIUM_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = LARGE_EXHALATION)¶	orelse¶	(distance = MEDIUM_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = SMALL_EXHALATION)¶	orelse¶	(distance = LARGE_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = MEDIUM_EXHALATION)¶	orelse¶	(distance = SMALL_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = MEDIUM_EXHALATION);¶	¶fun interpolatedSafe(distance, duration, exhalation) = ¶	let ¶		val interpolatedDistance = interpolateDistance(distance, SMALL_DISTANCE, MEDIUM_DISTANCE, LARGE_DISTANCE)¶		val interpolatedDuration = interpolateDuration(duration, SMALL_DURATION, MEDIUM_DURATION, LARGE_DURATION)¶		val interpolatedExhalation = interpolateExhalation(exhalation, SMALL_EXHALATION, MEDIUM_EXHALATION, LARGE_EXHALATION)¶	in¶		givenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhalation)¶	end¶¶fun¶	derivedIteration (distance, duration, exhalation, nil) = false |¶	derivedIteration (distance, duration, exhalation, ((safeDist, safeDur, safeEx) :: safetyTail)) =¶		if (distance >= safeDist andalso duration <= safeDur andalso exhalation <= safeEx) then¶			true¶		else¶			derivedIteration (distance, duration, exhalation, safetyTail);¶	¶fun listDerivedSafe (distance, duration, exhalation) =¶	derivedIteration(distance, duration, exhalation, SAFETY_TABLE);¶	¶fun printSafety (safetyComputer, (distance, duration, exhalation)) =¶	let¶		val isSafe = safetyComputer(distance, duration, exhalation)	¶	in¶		print ("Distance:"^Int.toString distance^" Duration:"^Int.toString duration^" Exhalation:"^Int.toString exhalation^" Safe:"^Bool.toString isSafe^"\n")¶	end¶	¶fun concisePrintSafety (safetyComputer, (distance, duration, exhalation)) =¶	let¶		val isSafe = safetyComputer(distance, duration, exhalation)	¶	in¶		print ("("^Int.toString distance^","^Int.toString duration^","^Int.toString exhalation^","^Bool.toString isSafe^")\n")¶	end¶	¶fun¶	printIterator(printSafety, safetyComputer, nil) = () | ¶	printIterator(printSafety, safetyComputer, (head :: tail)) =¶	(	¶		printSafety(safetyComputer, head) ;¶		printIterator(printSafety, safetyComputer, tail)¶	);	¶	¶fun listPrintSafety(printSafety, safetyComputer, listToPrint) =¶	printIterator(printSafety, safetyComputer, listToPrint);¶	¶fun¶	matchingSafeIterator(matcherFunction, (distance, duration, exhalation), nil) = false |¶	matchingSafeIterator(matcherFunction, (distance, duration, exhalation), ((safeDist, safeDur, safeEx) :: safeTail)) =¶		if matcherFunction((distance, duration, exhalation), (safeDist, safeDur, safeEx)) then¶			true¶		else¶			"), Diff(DELETE,"false"), Diff(INSERT,"matchingSafeIterator(matcherFunction, (distance, duration, exhalation), safeTail)"), Diff(EQUAL,";¶	¶fun matchingSafe(matcherFunction, (distance, duration, exhalation)) =¶	matchingSafeIterator(matcherFunction, (distance, duration, exhalation), SAFETY_TABLE);¶	¶"), Diff(INSERT,"fun derivedSafeMatcher((distance, duration, exhalation), (safeDist, safeDur, safeEx)) =¶	if (distance >= safeDist andalso duration <= safeDur andalso exhalation <= safeEx) then¶		true¶	else¶		false;	¶		¶fun givenSafeMatcher((distance, duration, exhalation), (safeDist, safeDur, safeEx)) =¶	if (distance = safeDist andalso duration = safeDur andalso exhalation = safeEx) then¶		true¶	else ¶		false¶		¶fun matchingDerivedSafe(distance, duration, exhalation) =¶	matchingSafe(derivedSafeMatcher, (distance, duration, exhalation));¶	¶fun matchingGivenSafe(distance, duration, exhalation) =¶	matchingSafe(givenSafeMatcher, (distance, duration, exhalation));¶	¶"), Diff(EQUAL,"fun curryableInterpolatedSafe distance duration exhalation =¶	interpolatedSafe(distance, duration, exhalation);¶	¶fun curriedOnceInterpolatedSafe duration exhalation = ¶	let¶		val distance = MEDIUM_DISTANCE¶	in¶		curryableInterpolatedSafe distance duration exhalation¶	end¶	¶fun curriedTwiceInterpolatedSafe exhalation =¶	let¶		val duration = MEDIUM_DURATION¶	in¶		curriedOnceInterpolatedSafe duration exhalation¶	end¶		¶		¶	¶")]]]></diff>
    <snapshot><![CDATA[val SMALL_DISTANCE = 6;
val MEDIUM_DISTANCE = 13;
val LARGE_DISTANCE = 27;

val SMALL_DURATION = 15;
val MEDIUM_DURATION = 30;
val LARGE_DURATION = 120;

val SMALL_EXHALATION = 10;
val MEDIUM_EXHALATION = 30;
val LARGE_EXHALATION = 50;

val MAX = 200;
val ZERO = 0;

val SAFETY_TABLE = [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),(6,15,30)];

fun interpolateDistance(distance, low, medium, high) = 
	if distance < low then ZERO else
	if distance >= high then LARGE_DISTANCE else
	if distance < high andalso distance >= medium then MEDIUM_DISTANCE
	else SMALL_DISTANCE;

fun interpolateDuration(duration, low, medium, high) =
	if duration <= low then SMALL_DURATION else
	if duration > high then MAX else
	if duration > medium andalso duration <= high then LARGE_DURATION
	else MEDIUM_DURATION;
	
fun interpolateExhalation(exhalation, low, medium, high) =
	if exhalation <= low then SMALL_EXHALATION else
	if exhalation > high then MAX else
	if exhalation > medium andalso exhalation <= high then LARGE_EXHALATION
	else MEDIUM_EXHALATION;

fun givenSafe(distance, duration, exhalation) = 
	(distance = MEDIUM_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = MEDIUM_EXHALATION)
	orelse
	(distance = SMALL_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = SMALL_EXHALATION)
	orelse
	(distance = LARGE_DISTANCE andalso duration = MEDIUM_DURATION andalso exhalation = LARGE_EXHALATION)
	orelse
	(distance = MEDIUM_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = LARGE_EXHALATION)
	orelse
	(distance = MEDIUM_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = SMALL_EXHALATION)
	orelse
	(distance = LARGE_DISTANCE andalso duration = LARGE_DURATION andalso exhalation = MEDIUM_EXHALATION)
	orelse
	(distance = SMALL_DISTANCE andalso duration = SMALL_DURATION andalso exhalation = MEDIUM_EXHALATION);
	
fun interpolatedSafe(distance, duration, exhalation) = 
	let 
		val interpolatedDistance = interpolateDistance(distance, SMALL_DISTANCE, MEDIUM_DISTANCE, LARGE_DISTANCE)
		val interpolatedDuration = interpolateDuration(duration, SMALL_DURATION, MEDIUM_DURATION, LARGE_DURATION)
		val interpolatedExhalation = interpolateExhalation(exhalation, SMALL_EXHALATION, MEDIUM_EXHALATION, LARGE_EXHALATION)
	in
		givenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhalation)
	end

fun
	derivedIteration (distance, duration, exhalation, nil) = false |
	derivedIteration (distance, duration, exhalation, ((safeDist, safeDur, safeEx) :: safetyTail)) =
		if (distance >= safeDist andalso duration <= safeDur andalso exhalation <= safeEx) then
			true
		else
			derivedIteration (distance, duration, exhalation, safetyTail);
	
fun listDerivedSafe (distance, duration, exhalation) =
	derivedIteration(distance, duration, exhalation, SAFETY_TABLE);
	
fun printSafety (safetyComputer, (distance, duration, exhalation)) =
	let
		val isSafe = safetyComputer(distance, duration, exhalation)	
	in
		print ("Distance:"^Int.toString distance^" Duration:"^Int.toString duration^" Exhalation:"^Int.toString exhalation^" Safe:"^Bool.toString isSafe^"\n")
	end
	
fun concisePrintSafety (safetyComputer, (distance, duration, exhalation)) =
	let
		val isSafe = safetyComputer(distance, duration, exhalation)	
	in
		print ("("^Int.toString distance^","^Int.toString duration^","^Int.toString exhalation^","^Bool.toString isSafe^")\n")
	end
	
fun
	printIterator(printSafety, safetyComputer, nil) = () | 
	printIterator(printSafety, safetyComputer, (head :: tail)) =
	(	
		printSafety(safetyComputer, head) ;
		printIterator(printSafety, safetyComputer, tail)
	);	
	
fun listPrintSafety(printSafety, safetyComputer, listToPrint) =
	printIterator(printSafety, safetyComputer, listToPrint);
	
fun
	matchingSafeIterator(matcherFunction, (distance, duration, exhalation), nil) = false |
	matchingSafeIterator(matcherFunction, (distance, duration, exhalation), ((safeDist, safeDur, safeEx) :: safeTail)) =
		if matcherFunction((distance, duration, exhalation), (safeDist, safeDur, safeEx)) then
			true
		else
			matchingSafeIterator(matcherFunction, (distance, duration, exhalation), safeTail);
	
fun matchingSafe(matcherFunction, (distance, duration, exhalation)) =
	matchingSafeIterator(matcherFunction, (distance, duration, exhalation), SAFETY_TABLE);
	
fun derivedSafeMatcher((distance, duration, exhalation), (safeDist, safeDur, safeEx)) =
	if (distance >= safeDist andalso duration <= safeDur andalso exhalation <= safeEx) then
		true
	else
		false;	
		
fun givenSafeMatcher((distance, duration, exhalation), (safeDist, safeDur, safeEx)) =
	if (distance = safeDist andalso duration = safeDur andalso exhalation = safeEx) then
		true
	else 
		false
		
fun matchingDerivedSafe(distance, duration, exhalation) =
	matchingSafe(derivedSafeMatcher, (distance, duration, exhalation));
	
fun matchingGivenSafe(distance, duration, exhalation) =
	matchingSafe(givenSafeMatcher, (distance, duration, exhalation));
	
fun curryableInterpolatedSafe distance duration exhalation =
	interpolatedSafe(distance, duration, exhalation);
	
fun curriedOnceInterpolatedSafe duration exhalation = 
	let
		val distance = MEDIUM_DISTANCE
	in
		curryableInterpolatedSafe distance duration exhalation
	end
	
fun curriedTwiceInterpolatedSafe exhalation =
	let
		val duration = MEDIUM_DURATION
	in
		curriedOnceInterpolatedSafe duration exhalation
	end
		
		
	
]]></snapshot>
  </Command>
  <Command __id="176" _type="RunCommand" date="Fri Oct 23 13:55:36 PDT 2020" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1603465420609" timestamp="21116006" type="Run" />
  <Command __id="177" _type="ShellCommand" date="Fri Oct 23 13:55:42 PDT 2020" starttimestamp="1603465420609" timestamp="21121710" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="178" _type="ShellCommand" date="Fri Oct 23 13:55:44 PDT 2020" starttimestamp="1603465420609" timestamp="21124186" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="179" _type="RunCommand" date="Fri Oct 23 13:55:44 PDT 2020" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1603465420609" timestamp="21124220" type="Run" />
  <Command __id="180" _type="EHExceptionCommand" date="Fri Oct 23 13:55:44 PDT 2020" starttimestamp="1603465420609" timestamp="21124348" type="Exception">
    <outputString><![CDATA[Standard ML of New Jersey (64-bit) v110.98 [built: Thu Jul 16 21:55:53 2020]
- [opening SocialDistance.sml]
val SMALL_DISTANCE = 6 : int
val MEDIUM_DISTANCE = 13 : int
val LARGE_DISTANCE = 27 : int
val SMALL_DURATION = 15 : int
val MEDIUM_DURATION = 30 : int
val LARGE_DURATION = 120 : int
val SMALL_EXHALATION = 10 : int
val MEDIUM_EXHALATION = 30 : int
val LARGE_EXHALATION = 50 : int
val MAX = 200 : int
val ZERO = 0 : int
val SAFETY_TABLE =
  [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),
   (6,15,30)] : (int * int * int) list
val interpolateDistance = fn : int * int * int * int -> int
val interpolateDuration = fn : int * int * int * int -> int
val interpolateExhalation = fn : int * int * int * int -> int
val givenSafe = fn : int * int * int -> bool
val interpolatedSafe = fn : int * int * int -> boolval derivedIteration = fn
                                                     : int * int * int
                                                        * (int * int * int) 
                                                          list
                                                        -> bool
val listDerivedSafe = fn : int * int * int -> bool
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val printSafety = fn : (int * int * int -> bool) * (int * int * int) -> unitval concisePrintSafety =
                                                                              fn
                                                                              : (
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  -> 
                                                                                    bool)
                                                                                 * (
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  * 
                                                                                    int)
                                                                                 -> unitval printIterator =
                                                                                          fn
                                                                                          : ('a
                                                                                              * 'b
                                                                                              -> 'c)
                                                                                             * 'a
                                                                                             * 'b
                                                                                               
                                                                                               list
                                                                                             -> unit
val listPrintSafety = fn : ('a * 'b -> 'c) * 'a * 'b list -> unit
val matchingSafeIterator = fn
  : (('a * 'b * 'c) * ('d * 'e * 'f) -> bool) * ('a * 'b * 'c)
     * ('d * 'e * 'f) list
     -> bool
val matchingSafe = fn
  : (('a * 'b * 'c) * (int * int * int) -> bool) * ('a * 'b * 'c) -> bool
val derivedSafeMatcher = fn : (int * int * int) * (int * int * int) -> bool
SocialDistance.sml:114.15 Warning: calling polyEqual

SocialDistance.sml:114.43 Warning: calling polyEqual

SocialDistance.sml:114.72 Warning: calling polyEqual

val givenSafeMatcher = fn : (''a * ''b * ''c) * (''a * ''b * ''c) -> boolval matchingDerivedSafe =
                                                                           fn
                                                                           : 
                                                                                int
                                                                              * 
                                                                                int
                                                                              * 
                                                                                int
                                                                              -> 
                                                                                bool
val matchingGivenSafe = fn : int * int * int -> bool
val curryableInterpolatedSafe = fn : int -> int -> int -> bool
val curriedOnceInterpolatedSafe = fn : int -> int -> boolval curriedTwiceInterpolatedSafe =
                                                           fn : int -> boolval curryableMatchingSafe =
                                                                             fn
                                                                             : (('a
                                                                                  * 'b
                                                                                  * 'c)
                                                                                 * (
                                                                                    int
                                                                                  * 
                                                                                    int
                                                                                  * 
                                                                                    int)
                                                                                 -> 
                                                                                   bool)
                                                                                -> 'a
                                                                                -> 'b
                                                                                -> 'c
                                                                                -> 
                                                                                  bool
val curriedMatchingDerivedSafe = fn : int -> int -> int -> bool
]]></outputString>
  </Command>
  <Command __id="181" _type="EHExceptionCommand" date="Fri Oct 23 13:55:45 PDT 2020" starttimestamp="1603465420609" timestamp="21124418" type="Exception">
    <outputString><![CDATA[val curriedMatchingGivenSafe = fn : int -> int -> int -> bool
val it = () : unit
- ]]></outputString>
  </Command>
  <Command __id="182" _type="EHExceptionCommand" date="Fri Oct 23 13:55:54 PDT 2020" starttimestamp="1603465420609" timestamp="21134091" type="Exception">
    <outputString><![CDATA[curriedMatchingGivenSafe 13 30 30;
]]></outputString>
  </Command>
  <Command __id="183" _type="EHExceptionCommand" date="Fri Oct 23 13:55:54 PDT 2020" starttimestamp="1603465420609" timestamp="21134149" type="Exception">
    <outputString><![CDATA[val it = true : bool
- ]]></outputString>
  </Command>
  <Command __id="205" _type="ShellCommand" date="Fri Oct 23 13:56:34 PDT 2020" starttimestamp="1603465420609" timestamp="21174058" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="207" _type="ShellCommand" date="Fri Oct 23 13:56:42 PDT 2020" starttimestamp="1603465420609" timestamp="21182237" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="209" _type="RunCommand" date="Fri Oct 23 13:57:51 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="21250587" type="Run" />
  <Command __id="210" _type="RunCommand" date="Fri Oct 23 13:57:51 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="21250587" type="Run" />
  <Command __id="211" _type="EHExceptionCommand" date="Fri Oct 23 13:57:51 PDT 2020" starttimestamp="1603465420609" timestamp="21250840" type="Exception">
    <outputString><![CDATA[Buffer traced messages =true
]]></outputString>
  </Command>
  <Command __id="212" _type="ShellCommand" date="Fri Oct 23 13:57:51 PDT 2020" starttimestamp="1603465420609" timestamp="21251021" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="213" _type="EHExceptionCommand" date="Fri Oct 23 13:57:52 PDT 2020" starttimestamp="1603465420609" timestamp="21252247" type="Exception">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Sun Aug 23 09:32:35 EDT 2020). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
]]></outputString>
  </Command>
  <Command __id="214" _type="EHExceptionCommand" date="Fri Oct 23 13:57:55 PDT 2020" starttimestamp="1603465420609" timestamp="21254576" type="Exception">
    <outputString><![CDATA[Running junit test:CurriedOnceInterpolatedSafe
Running junit test:SocialDistanceSMLProvided
]]></outputString>
  </Command>
  <Command __id="215" _type="ExceptionCommand" date="Fri Oct 23 13:57:55 PDT 2020" starttimestamp="1603465420609" timestamp="21255127" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: Stream closed
	at java.base/java.lang.ProcessBuilder$NullOutputStream.write(ProcessBuilder.java:442)
	at java.base/java.io.OutputStream.write(OutputStream.java:113)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:254)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:47)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:983)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:758)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:726)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:543)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:82)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:46)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:55)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:40)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:29)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurriedOnceInterpolatedSafe.test(CurriedOnceInterpolatedSafe.java:124)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:108)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.io.IOException: Stream closed
	at java.base/java.lang.ProcessBuilder$NullOutputStream.write(ProcessBuilder.java:442)
	at java.base/java.io.OutputStream.write(OutputStream.java:113)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/java.io.FilterOutputStream.close(FilterOutputStream.java:182)
	at java.base/sun.nio.cs.StreamEncoder.implClose(StreamEncoder.java:341)
	at java.base/sun.nio.cs.StreamEncoder.close(StreamEncoder.java:161)
	at java.base/java.io.OutputStreamWriter.close(OutputStreamWriter.java:258)
	at grader.basics.execution.ARunnerInputStreamProcessor.terminateInput(ARunnerInputStreamProcessor.java:57)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:984)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:758)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:726)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:543)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:82)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:46)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:55)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:40)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:29)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurriedOnceInterpolatedSafe.test(CurriedOnceInterpolatedSafe.java:124)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:108)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Testing CurriedOnceInterpolatedSafe with the following inputs:
"print("Results:");" "curriedOnceInterpolatedSafe 30 30;" "curriedOnceInterpolatedSafe 15 50;" "curriedOnceInterpolatedSafe 120 10;" "curriedOnceInterpolatedSafe 29 30;" "curriedOnceInterpolatedSafe 15 49;" "curriedOnceInterpolatedSafe 119 10;" "curriedOnceInterpolatedSafe 29 29;" 
"curriedOnceInterpolatedSafe 14 49;" "curriedOnceInterpolatedSafe 119 9;" "curriedOnceInterpolatedSafe 120 30;" "curriedOnceInterpolatedSafe 30 50;" "curriedOnceInterpolatedSafe 120 50;" "curriedOnceInterpolatedSafe 30 31;" "curriedOnceInterpolatedSafe 16 50;" "curriedOnceInterpolatedSafe 121 11;" 
"val curryTest =curriedOnceInterpolatedSafe 30;" "curryTest 30;" "curryTest 31;" 

Collected output:
java.lang.NullPointerException
	at gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.AnAbstractRegexLineChecker.regexOutputChecks(AnAbstractRegexLineChecker.java:10)
	at gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.AnAbstractRegexLineChecker.regexOutputChecks(AnAbstractRegexLineChecker.java:43)
	at gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.AnAbstractRegexLineChecker.regexOutputChecks(AnAbstractRegexLineChecker.java:31)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurriedOnceInterpolatedSafe.test(CurriedOnceInterpolatedSafe.java:133)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:108)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Test Failed:java.lang.NullPointerException null%0.0
Steps traced since last test:

Running junit test:CurriedTwiceInterpolatedSafe
]]></exceptionString>
  </Command>
  <Command __id="216" _type="ExceptionCommand" date="Fri Oct 23 13:57:56 PDT 2020" starttimestamp="1603465420609" timestamp="21255649" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: Stream closed
	at java.base/java.lang.ProcessBuilder$NullOutputStream.write(ProcessBuilder.java:442)
	at java.base/java.io.OutputStream.write(OutputStream.java:113)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:254)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:47)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:983)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:758)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:726)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:543)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:82)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:46)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:55)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:40)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:29)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurriedTwiceInterpolatedSafe.test(CurriedTwiceInterpolatedSafe.java:93)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:108)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.io.IOException: Stream closed
	at java.base/java.lang.ProcessBuilder$NullOutputStream.write(ProcessBuilder.java:442)
	at java.base/java.io.OutputStream.write(OutputStream.java:113)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/java.io.FilterOutputStream.close(FilterOutputStream.java:182)
	at java.base/sun.nio.cs.StreamEncoder.implClose(StreamEncoder.java:341)
	at java.base/sun.nio.cs.StreamEncoder.close(StreamEncoder.java:161)
	at java.base/java.io.OutputStreamWriter.close(OutputStreamWriter.java:258)
	at grader.basics.execution.ARunnerInputStreamProcessor.terminateInput(ARunnerInputStreamProcessor.java:57)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:984)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:758)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:726)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:543)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:82)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:46)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:55)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:40)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:29)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurriedTwiceInterpolatedSafe.test(CurriedTwiceInterpolatedSafe.java:93)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:108)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Testing CurriedTwiceInterpolatedSafe with the following inputs:
"print("Results:");" "curriedTwiceInterpolatedSafe 30;" "curriedTwiceInterpolatedSafe 29;" "curriedTwiceInterpolatedSafe 11;" "curriedTwiceInterpolatedSafe 10;" "curriedTwiceInterpolatedSafe 9;" "curriedTwiceInterpolatedSafe 50;" "curriedTwiceInterpolatedSafe 49;" 
"curriedTwiceInterpolatedSafe 51;" 

Collected output:
java.lang.NullPointerException
	at gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.AnAbstractRegexLineChecker.regexOutputChecks(AnAbstractRegexLineChecker.java:10)
	at gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.AnAbstractRegexLineChecker.regexOutputChecks(AnAbstractRegexLineChecker.java:43)
	at gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.AnAbstractRegexLineChecker.regexOutputChecks(AnAbstractRegexLineChecker.java:31)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurriedTwiceInterpolatedSafe.test(CurriedTwiceInterpolatedSafe.java:102)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:108)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Test Failed:java.lang.NullPointerException null%0.0
Steps traced since last test:

Running junit test:CurryableInterpolatedSafe
]]></exceptionString>
  </Command>
  <Command __id="217" _type="ExceptionCommand" date="Fri Oct 23 13:57:56 PDT 2020" starttimestamp="1603465420609" timestamp="21256168" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: Stream closed
	at java.base/java.lang.ProcessBuilder$NullOutputStream.write(ProcessBuilder.java:442)
	at java.base/java.io.OutputStream.write(OutputStream.java:113)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:254)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:47)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:983)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:758)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:726)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:543)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:82)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:46)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:55)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:40)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:29)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurryableInterpolatedSafe.test(CurryableInterpolatedSafe.java:163)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:108)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.io.IOException: Stream closed
	at java.base/java.lang.ProcessBuilder$NullOutputStream.write(ProcessBuilder.java:442)
	at java.base/java.io.OutputStream.write(OutputStream.java:113)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/java.io.FilterOutputStream.close(FilterOutputStream.java:182)
	at java.base/sun.nio.cs.StreamEncoder.implClose(StreamEncoder.java:341)
	at java.base/sun.nio.cs.StreamEncoder.close(StreamEncoder.java:161)
	at java.base/java.io.OutputStreamWriter.close(OutputStreamWriter.java:258)
	at grader.basics.execution.ARunnerInputStreamProcessor.terminateInput(ARunnerInputStreamProcessor.java:57)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:984)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:758)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:726)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:543)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:82)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:46)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:55)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:40)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:29)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurryableInterpolatedSafe.test(CurryableInterpolatedSafe.java:163)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:108)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Testing CurryableInterpolatedSafe with the following inputs:
"print("Results:");" "curryableInterpolatedSafe 13 30 30;" "curryableInterpolatedSafe 6 30 10;" "curryableInterpolatedSafe 27 30 50;" "curryableInterpolatedSafe 13 15 50;" "curryableInterpolatedSafe 13 120 10;" "curryableInterpolatedSafe 27 120 30;" "curryableInterpolatedSafe 6 15 30;" 
"curryableInterpolatedSafe 14 30 30;" "curryableInterpolatedSafe 7 30 10;" "curryableInterpolatedSafe 27 29 50;" "curryableInterpolatedSafe 13 14 50;" "curryableInterpolatedSafe 13 120 9;" "curryableInterpolatedSafe 27 120 29;" "curryableInterpolatedSafe 7 15 30;" "curryableInterpolatedSafe 14 29 29;" 
"curryableInterpolatedSafe 7 29 9;" "curryableInterpolatedSafe 28 29 49;" "curryableInterpolatedSafe 14 14 49;" "curryableInterpolatedSafe 14 119 9;" "curryableInterpolatedSafe 28 119 29;" "curryableInterpolatedSafe 7 14 29;" "curryableInterpolatedSafe 26 30 30;" "curryableInterpolatedSafe 12 30 10;" 
"curryableInterpolatedSafe 27 16 50;" "curryableInterpolatedSafe 13 0 50;" "curryableInterpolatedSafe 13 120 0;" "curryableInterpolatedSafe 27 120 11;" "curryableInterpolatedSafe 12 15 30;" "curryableInterpolatedSafe 26 16 11;" "curryableInterpolatedSafe 12 16 0;" "curryableInterpolatedSafe 500 16 31;" 
"curryableInterpolatedSafe 26 0 31;" "curryableInterpolatedSafe 26 31 0;" "curryableInterpolatedSafe 500 31 11;" "curryableInterpolatedSafe 12 0 11;" "curryableInterpolatedSafe 6 15 10;" "curryableInterpolatedSafe 6 15 50;" "curryableInterpolatedSafe 6 30 30;" "curryableInterpolatedSafe 6 30 50;" 
"curryableInterpolatedSafe 6 120 10;" "curryableInterpolatedSafe 6 120 30;" "curryableInterpolatedSafe 6 120 50;" "curryableInterpolatedSafe 13 15 10;" "curryableInterpolatedSafe 13 15 30;" "curryableInterpolatedSafe 13 30 10;" "curryableInterpolatedSafe 13 30 50;" "curryableInterpolatedSafe 13 120 30;" 
"curryableInterpolatedSafe 13 120 50;" "curryableInterpolatedSafe 27 15 10;" "curryableInterpolatedSafe 27 15 30;" "curryableInterpolatedSafe 27 15 50;" "curryableInterpolatedSafe 27 30 10;" "curryableInterpolatedSafe 27 30 30;" "curryableInterpolatedSafe 27 120 10;" "curryableInterpolatedSafe 27 120 50;" 
"curryableInterpolatedSafe 27 500 50;" "curryableInterpolatedSafe 27 120 500;" "curryableInterpolatedSafe 5 15 30;" "curryableInterpolatedSafe 13 121 10;" "curryableInterpolatedSafe 27 120 31;" "curryableInterpolatedSafe 0 15 10;" "curryableInterpolatedSafe 6 15 500;" "curryableInterpolatedSafe 500 500 500;" 
"curryableInterpolatedSafe 128 128 128;" "curryableInterpolatedSafe 0 0 50;" "curryableInterpolatedSafe 13 0 51;" "curryableInterpolatedSafe 0 0 0;" "curryableInterpolatedSafe 20 22 50;" "curryableInterpolatedSafe 26 121 51;" "val curried = curryableInterpolatedSafe 13;" "curried 29 29;" 
"curried 30 1;" 

Collected output:
java.lang.NullPointerException
	at gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.AnAbstractRegexLineChecker.regexOutputChecks(AnAbstractRegexLineChecker.java:10)
	at gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.AnAbstractRegexLineChecker.regexOutputChecks(AnAbstractRegexLineChecker.java:43)
	at gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.AnAbstractRegexLineChecker.regexOutputChecks(AnAbstractRegexLineChecker.java:31)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurryableInterpolatedSafe.test(CurryableInterpolatedSafe.java:172)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:108)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Test Failed:java.lang.NullPointerException null%0.0
Steps traced since last test:

Running junit test:CurryableMatchingSafe
]]></exceptionString>
  </Command>
  <Command __id="218" _type="ExceptionCommand" date="Fri Oct 23 13:57:57 PDT 2020" starttimestamp="1603465420609" timestamp="21256685" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: Stream closed
	at java.base/java.lang.ProcessBuilder$NullOutputStream.write(ProcessBuilder.java:442)
	at java.base/java.io.OutputStream.write(OutputStream.java:113)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:254)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:47)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:983)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:758)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:726)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:543)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:82)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:46)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:55)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:40)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:29)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurryableMatchingSafe.test(CurryableMatchingSafe.java:156)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:108)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.io.IOException: Stream closed
	at java.base/java.lang.ProcessBuilder$NullOutputStream.write(ProcessBuilder.java:442)
	at java.base/java.io.OutputStream.write(OutputStream.java:113)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/java.io.FilterOutputStream.close(FilterOutputStream.java:182)
	at java.base/sun.nio.cs.StreamEncoder.implClose(StreamEncoder.java:341)
	at java.base/sun.nio.cs.StreamEncoder.close(StreamEncoder.java:161)
	at java.base/java.io.OutputStreamWriter.close(OutputStreamWriter.java:258)
	at grader.basics.execution.ARunnerInputStreamProcessor.terminateInput(ARunnerInputStreamProcessor.java:57)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:984)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:758)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:726)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:543)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:82)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:46)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:55)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:40)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:29)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurryableMatchingSafe.test(CurryableMatchingSafe.java:156)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:108)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Testing CurryableMatchingSafe with the following inputs:
"print("Results:");" "curriedTestCall (30,30,13);" "curriedTestCall (10,30,6);" "curriedTestCall (50,30,27);" "curriedTestCall (50,15,13);" "curriedTestCall (10,120,13);" "curriedTestCall (30,120,27);" "curriedTestCall (30,15,6);" 
"curriedTestCall (30,30,14);" "curriedTestCall (10,30,7);" "curriedTestCall (50,29,27);" "curriedTestCall (50,14,13);" "curriedTestCall (9,120,13);" "curriedTestCall (29,120,27);" "curriedTestCall (30,15,7);" "curriedTestCall (29,29,14);" 
"curriedTestCall (9,29,7);" "curriedTestCall (49,29,28);" "curriedTestCall (49,14,14);" "curriedTestCall (9,119,14);" "curriedTestCall (29,119,28);" "curriedTestCall (29,14,7);" "curriedTestCall (30,30,26);" "curriedTestCall (10,30,12);" 
"curriedTestCall (50,16,27);" "curriedTestCall (50,0,13);" "curriedTestCall (0,120,13);" "curriedTestCall (11,120,27);" "curriedTestCall (30,15,12);" "curriedTestCall (11,16,26);" java.lang.NullPointerException
	at gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.AnAbstractRegexLineChecker.regexOutputChecks(AnAbstractRegexLineChecker.java:10)
	at gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.AnAbstractRegexLineChecker.regexOutputChecks(AnAbstractRegexLineChecker.java:43)
	at gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.AnAbstractRegexLineChecker.regexOutputChecks(AnAbstractRegexLineChecker.java:31)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurryableMatchingSafe.test(CurryableMatchingSafe.java:166)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:108)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
"curriedTestCall (0,16,12);" "curriedTestCall (31,16,500);" 
"curriedTestCall (31,0,26);" "curriedTestCall (0,31,26);" "curriedTestCall (11,31,500);" "curriedTestCall (11,0,12);" "curriedTestCall (10,15,6);" "curriedTestCall (50,15,6);" "curriedTestCall (30,30,6);" "curriedTestCall (50,30,6);" 
"curriedTestCall (10,120,6);" "curriedTestCall (30,120,6);" "curriedTestCall (50,120,6);" "curriedTestCall (10,15,13);" "curriedTestCall (30,15,13);" "curriedTestCall (10,30,13);" "curriedTestCall (50,30,13);" "curriedTestCall (30,120,13);" 
"curriedTestCall (50,120,13);" "curriedTestCall (10,15,27);" "curriedTestCall (30,15,27);" "curriedTestCall (50,15,27);" "curriedTestCall (10,30,27);" "curriedTestCall (30,30,27);" "curriedTestCall (10,120,27);" "curriedTestCall (50,120,27);" 
"curriedTestCall (50,500,27);" "curriedTestCall (500,120,27);" "curriedTestCall (30,15,5);" "curriedTestCall (10,121,13);" "curriedTestCall (31,120,27);" "curriedTestCall (10,15,0);" "curriedTestCall (500,15,6);" "curriedTestCall (500,500,500);" 
"curriedTestCall (128,128,128);" "curriedTestCall (50,0,0);" "curriedTestCall (51,0,13);" "curriedTestCall (0,0,0);" "curriedTestCall (50,22,20);" "curriedTestCall (51,121,26);" 

Collected output:
Test Failed:java.lang.NullPointerException null%0.0
Steps traced since last test:

Running junit test:CurriedMatchingDerivedSafe
java.lang.AssertionError: CurriedMatchingSafe Must Pass first%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.junit.BasicJUnitUtils.assertTrue(BasicJUnitUtils.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:113)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Test Failed:CurriedMatchingSafe Must Pass first%0.0
Steps traced since last test:

Running junit test:CurriedMatchingGivenSafe
java.lang.AssertionError: CurriedMatchingSafe Must Pass first%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.junit.BasicJUnitUtils.assertTrue(BasicJUnitUtils.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:113)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Test Failed:CurriedMatchingSafe Must Pass first%0.0
Steps traced since last test:

]]></exceptionString>
  </Command>
  <Command __id="219" _type="EHExceptionCommand" date="Fri Oct 23 13:57:57 PDT 2020" starttimestamp="1603465420609" timestamp="21257374" type="Exception">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment3.functionReturnValues.CurryableMatchingSafe@70383fec . Results may change.
W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: TestRunStarted of object: FunctionReturnValuesTestSuite[60.0 pts](grader.basics.junit.AGradableJUnitSuite@49bd54f7). Ignoring notification.
]]></outputString>
  </Command>
  <Command __id="223" _type="RunCommand" date="Fri Oct 23 13:58:10 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="21270112" type="Run" />
  <Command __id="224" _type="RunCommand" date="Fri Oct 23 13:58:10 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="21270113" type="Run" />
  <Command __id="225" _type="EHExceptionCommand" date="Fri Oct 23 13:58:11 PDT 2020" starttimestamp="1603465420609" timestamp="21270421" type="Exception">
    <outputString><![CDATA[Buffer traced messages =true
]]></outputString>
  </Command>
  <Command __id="226" _type="ShellCommand" date="Fri Oct 23 13:58:11 PDT 2020" starttimestamp="1603465420609" timestamp="21270565" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="227" _type="EHExceptionCommand" date="Fri Oct 23 13:58:12 PDT 2020" starttimestamp="1603465420609" timestamp="21271835" type="Exception">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Sun Aug 23 09:32:35 EDT 2020). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
]]></outputString>
  </Command>
  <Command __id="228" _type="EHExceptionCommand" date="Fri Oct 23 13:58:15 PDT 2020" starttimestamp="1603465420609" timestamp="21274467" type="Exception">
    <outputString><![CDATA[Running junit test:CurriedOnceInterpolatedSafe
Running junit test:SocialDistanceSMLProvided
]]></outputString>
  </Command>
  <Command __id="229" _type="EHExceptionCommand" date="Fri Oct 23 13:58:15 PDT 2020" starttimestamp="1603465420609" timestamp="21274994" type="Exception">
    <outputString><![CDATA[
Testing CurriedOnceInterpolatedSafe with the following inputs:
"print("Results:");" "curriedOnceInterpolatedSafe 30 30;" "curriedOnceInterpolatedSafe 15 50;" "curriedOnceInterpolatedSafe 120 10;" "curriedOnceInterpolatedSafe 29 30;" "curriedOnceInterpolatedSafe 15 49;" "curriedOnceInterpolatedSafe 119 10;" "curriedOnceInterpolatedSafe 29 29;" 
"curriedOnceInterpolatedSafe 14 49;" "curriedOnceInterpolatedSafe 119 9;" "curriedOnceInterpolatedSafe 120 30;" "curriedOnceInterpolatedSafe 30 50;" "curriedOnceInterpolatedSafe 120 50;" "curriedOnceInterpolatedSafe 30 31;" "curriedOnceInterpolatedSafe 16 50;" "curriedOnceInterpolatedSafe 121 11;" 
"val curryTest =curriedOnceInterpolatedSafe 30;" "curryTest 30;" "curryTest 31;" 

Collected output:
0 val curriedMatchingGivenSafe = fn : int -> int -> int -> bool
1 - Results:val it = () : unit
2 val it = true : bool
3 val it = true : bool
4 val it = true : bool
5 val it = true : bool
6 val it = true : bool
7 val it = true : bool
8 val it = true : bool
9 val it = true : bool
10 val it = true : bool
11 val it = false : bool
12 val it = false : bool
13 val it = false : bool
14 val it = false : bool
15 val it = false : bool
16 val it = false : bool
17 val curryTest = fn : int -> bool
18 val it = true : bool
19 val it = false : bool

Output line: "2" matches regex: .*true.*
Output line: "3" matches regex: .*true.*
Output line: "4" matches regex: .*true.*
Output line: "5" matches regex: .*true.*
Output line: "6" matches regex: .*true.*
Output line: "7" matches regex: .*true.*
Output line: "8" matches regex: .*true.*
Output line: "9" matches regex: .*true.*
Output line: "10" matches regex: .*true.*
Output line: "11" matches regex: .*false.*
Output line: "12" matches regex: .*false.*
Output line: "13" matches regex: .*false.*
Output line: "14" matches regex: .*false.*
Output line: "15" matches regex: .*false.*
Output line: "16" matches regex: .*false.*
Output line: "18" matches regex: .*true.*
Output line: "19" matches regex: .*false.*
Running junit test:CurriedTwiceInterpolatedSafe
]]></outputString>
  </Command>
  <Command __id="230" _type="EHExceptionCommand" date="Fri Oct 23 13:58:16 PDT 2020" starttimestamp="1603465420609" timestamp="21275526" type="Exception">
    <outputString><![CDATA[
Testing CurriedTwiceInterpolatedSafe with the following inputs:
"print("Results:");" "curriedTwiceInterpolatedSafe 30;" "curriedTwiceInterpolatedSafe 29;" "curriedTwiceInterpolatedSafe 11;" "curriedTwiceInterpolatedSafe 10;" "curriedTwiceInterpolatedSafe 9;" "curriedTwiceInterpolatedSafe 50;" "curriedTwiceInterpolatedSafe 49;" 
"curriedTwiceInterpolatedSafe 51;" 

Collected output:
0 val curriedMatchingGivenSafe = fn : int -> int -> int -> bool
1 - Results:val it = () : unit
2 val it = true : bool
3 val it = true : bool
4 val it = true : bool
5 val it = false : bool
6 val it = false : bool
7 val it = false : bool
8 val it = false : bool
9 val it = false : bool

Output line: "2" matches regex: .*true.*
Output line: "3" matches regex: .*true.*
Output line: "4" matches regex: .*true.*
Output line: "5" matches regex: .*false.*
Output line: "6" matches regex: .*false.*
Output line: "7" matches regex: .*false.*
Output line: "8" matches regex: .*false.*
Output line: "9" matches regex: .*false.*
Running junit test:CurryableInterpolatedSafe
]]></outputString>
  </Command>
  <Command __id="231" _type="EHExceptionCommand" date="Fri Oct 23 13:58:16 PDT 2020" starttimestamp="1603465420609" timestamp="21276153" type="Exception">
    <outputString><![CDATA[
Testing CurryableInterpolatedSafe with the following inputs:
"print("Results:");" "curryableInterpolatedSafe 13 30 30;" "curryableInterpolatedSafe 6 30 10;" "curryableInterpolatedSafe 27 30 50;" "curryableInterpolatedSafe 13 15 50;" "curryableInterpolatedSafe 13 120 10;" "curryableInterpolatedSafe 27 120 30;" "curryableInterpolatedSafe 6 15 30;" 
"curryableInterpolatedSafe 14 30 30;" "curryableInterpolatedSafe 7 30 10;" "curryableInterpolatedSafe 27 29 50;" "curryableInterpolatedSafe 13 14 50;" "curryableInterpolatedSafe 13 120 9;" "curryableInterpolatedSafe 27 120 29;" "curryableInterpolatedSafe 7 15 30;" "curryableInterpolatedSafe 14 29 29;" 
"curryableInterpolatedSafe 7 29 9;" "curryableInterpolatedSafe 28 29 49;" "curryableInterpolatedSafe 14 14 49;" "curryableInterpolatedSafe 14 119 9;" "curryableInterpolatedSafe 28 119 29;" "curryableInterpolatedSafe 7 14 29;" "curryableInterpolatedSafe 26 30 30;" "curryableInterpolatedSafe 12 30 10;" 
"curryableInterpolatedSafe 27 16 50;" "curryableInterpolatedSafe 13 0 50;" "curryableInterpolatedSafe 13 120 0;" "curryableInterpolatedSafe 27 120 11;" "curryableInterpolatedSafe 12 15 30;" "curryableInterpolatedSafe 26 16 11;" "curryableInterpolatedSafe 12 16 0;" "curryableInterpolatedSafe 500 16 31;" 
"curryableInterpolatedSafe 26 0 31;" "curryableInterpolatedSafe 26 31 0;" "curryableInterpolatedSafe 500 31 11;" "curryableInterpolatedSafe 12 0 11;" "curryableInterpolatedSafe 6 15 10;" "curryableInterpolatedSafe 6 15 50;" "curryableInterpolatedSafe 6 30 30;" "curryableInterpolatedSafe 6 30 50;" 
"curryableInterpolatedSafe 6 120 10;" "curryableInterpolatedSafe 6 120 30;" "curryableInterpolatedSafe 6 120 50;" "curryableInterpolatedSafe 13 15 10;" "curryableInterpolatedSafe 13 15 30;" "curryableInterpolatedSafe 13 30 10;" "curryableInterpolatedSafe 13 30 50;" "curryableInterpolatedSafe 13 120 30;" 
"curryableInterpolatedSafe 13 120 50;" "curryableInterpolatedSafe 27 15 10;" "curryableInterpolatedSafe 27 15 30;" "curryableInterpolatedSafe 27 15 50;" "curryableInterpolatedSafe 27 30 10;" "curryableInterpolatedSafe 27 30 30;" "curryableInterpolatedSafe 27 120 10;" "curryableInterpolatedSafe 27 120 50;" 
"curryableInterpolatedSafe 27 500 50;" "curryableInterpolatedSafe 27 120 500;" "curryableInterpolatedSafe 5 15 30;" "curryableInterpolatedSafe 13 121 10;" "curryableInterpolatedSafe 27 120 31;" "curryableInterpolatedSafe 0 15 10;" "curryableInterpolatedSafe 6 15 500;" "curryableInterpolatedSafe 500 500 500;" 
"curryableInterpolatedSafe 128 128 128;" "curryableInterpolatedSafe 0 0 50;" "curryableInterpolatedSafe 13 0 51;" "curryableInterpolatedSafe 0 0 0;" "curryableInterpolatedSafe 20 22 50;" "curryableInterpolatedSafe 26 121 51;" "val curried = curryableInterpolatedSafe 13;" "curried 29 29;" 
"curried 30 1;" 

Collected output:
0 val curriedMatchingGivenSafe = fn : int -> int -> int -> bool
1 - Results:val it = () : unit
2 val it = true : bool
3 val it = true : bool
4 val it = true : bool
5 val it = true : bool
6 val it = true : bool
7 val it = true : bool
8 val it = true : bool
9 val it = true : bool
10 val it = true : bool
11 val it = true : bool
12 val it = true : bool
13 val it = true : bool
14 val it = true : bool
15 val it = true : bool
16 val it = true : bool
17 val it = true : bool
18 val it = true : bool
19 val it = true : bool
20 val it = true : bool
21 val it = true : bool
22 val it = true : bool
23 val it = true : bool
24 val it = true : bool
25 val it = true : bool
26 val it = true : bool
27 val it = true : bool
28 val it = true : bool
29 val it = true : bool
30 val it = true : bool
31 val it = true : bool
32 val it = true : bool
33 val it = true : bool
34 val it = true : bool
35 val it = true : bool
36 val it = true : bool
37 val it = false : bool
38 val it = false : bool
39 val it = false : bool
40 val it = false : bool
41 val it = false : bool
42 val it = false : bool
43 val it = false : bool
44 val it = false : bool
45 val it = false : bool
46 val it = false : bool
47 val it = false : bool
48 val it = false : bool
49 val it = false : bool
50 val it = false : bool
51 val it = false : bool
52 val it = false : bool
53 val it = false : bool
54 val it = false : bool
55 val it = false : bool
56 val it = false : bool
57 val it = false : bool
58 val it = false : bool
59 val it = false : bool
60 val it = false : bool
61 val it = false : bool
62 val it = false : bool
63 val it = false : bool
64 val it = false : bool
65 val it = false : bool
66 val it = false : bool
67 val it = false : bool
68 val it = false : bool
69 val it = false : bool
70 val it = false : bool
71 val curried = fn : int -> int -> bool
72 val it = true : bool
73 val it = false : bool

Output line: "2" matches regex: .*true.*
Output line: "3" matches regex: .*true.*
Output line: "4" matches regex: .*true.*
Output line: "5" matches regex: .*true.*
Output line: "6" matches regex: .*true.*
Output line: "7" matches regex: .*true.*
Output line: "8" matches regex: .*true.*
Output line: "9" matches regex: .*true.*
Output line: "10" matches regex: .*true.*
Output line: "11" matches regex: .*true.*
Output line: "12" matches regex: .*true.*
Output line: "13" matches regex: .*true.*
Output line: "14" matches regex: .*true.*
Output line: "15" matches regex: .*true.*
Output line: "16" matches regex: .*true.*
Output line: "17" matches regex: .*true.*
Output line: "18" matches regex: .*true.*
Output line: "19" matches regex: .*true.*
Output line: "20" matches regex: .*true.*
Output line: "21" matches regex: .*true.*
Output line: "22" matches regex: .*true.*
Output line: "23" matches regex: .*true.*
Output line: "24" matches regex: .*true.*
Output line: "25" matches regex: .*true.*
Output line: "26" matches regex: .*true.*
Output line: "27" matches regex: .*true.*
Output line: "28" matches regex: .*true.*
Output line: "29" matches regex: .*true.*
Output line: "30" matches regex: .*true.*
Output line: "31" matches regex: .*true.*
Output line: "32" matches regex: .*true.*
Output line: "33" matches regex: .*true.*
Output line: "34" matches regex: .*true.*
Output line: "35" matches regex: .*true.*
Output line: "36" matches regex: .*true.*
Output line: "37" matches regex: .*false.*
Output line: "38" matches regex: .*false.*
Output line: "39" matches regex: .*false.*
Output line: "40" matches regex: .*false.*
Output line: "41" matches regex: .*false.*
Output line: "42" matches regex: .*false.*
Output line: "43" matches regex: .*false.*
Output line: "44" matches regex: .*false.*
Output line: "45" matches regex: .*false.*
Output line: "46" matches regex: .*false.*
Output line: "47" matches regex: .*false.*
Output line: "48" matches regex: .*false.*
Output line: "49" matches regex: .*false.*
Output line: "50" matches regex: .*false.*
Output line: "51" matches regex: .*false.*
Output line: "52" matches regex: .*false.*
Output line: "53" matches regex: .*false.*
Output line: "54" matches regex: .*false.*
Output line: "55" matches regex: .*false.*
Output line: "56" matches regex: .*false.*
Output line: "57" matches regex: .*false.*
Output line: "58" matches regex: .*false.*
Output line: "59" matches regex: .*false.*
Output line: "60" matches regex: .*false.*
Output line: "61" matches regex: .*false.*
Output line: "62" matches regex: .*false.*
Output line: "63" matches regex: .*false.*
Output line: "64" matches regex: .*false.*
Output line: "65" matches regex: .*false.*
Output line: "66" matches regex: .*false.*
Output line: "67" matches regex: .*false.*
Output line: "68" matches regex: .*false.*
Output line: "69" matches regex: .*false.*
Output line: "70" matches regex: .*false.*
Output line: "72" matches regex: .*true.*
Output line: "73" matches regex: .*false.*
Running junit test:CurryableMatchingSafe
]]></outputString>
  </Command>
  <Command __id="232" _type="EHExceptionCommand" date="Fri Oct 23 13:58:17 PDT 2020" starttimestamp="1603465420609" timestamp="21276678" type="Exception">
    <outputString><![CDATA[
Testing CurryableMatchingSafe with the following inputs:
"print("Results:");" "curriedTestCall (30,30,13);" "curriedTestCall (10,30,6);" "curriedTestCall (50,30,27);" "curriedTestCall (50,15,13);" "curriedTestCall (10,120,13);" "curriedTestCall (30,120,27);" "curriedTestCall (30,15,6);" 
java.lang.AssertionError: View console for more detail%0.0
"curriedTestCall (30,30,14);" "curriedTestCall (10,30,7);" "curriedTestCall (50,29,27);" "curriedTestCall (50,14,13);" "curriedTestCall (9,120,13);" "curriedTestCall (29,120,27);" "curriedTestCall (30,15,7);" "curriedTestCall (29,29,14);" 
"curriedTestCall (9,29,7);" "curriedTestCall (49,29,28);" "curriedTestCall (49,14,14);" "curriedTestCall (9,119,14);" "curriedTestCall (29,119,28);" "curriedTestCall (29,14,7);" "curriedTestCall (30,30,26);" "curriedTestCall (10,30,12);" 
"curriedTestCall (50,16,27);" "curriedTestCall (50,0,13);" "curriedTestCall (0,120,13);" "curriedTestCall (11,120,27);" "curriedTestCall (30,15,12);" "curriedTestCall (11,16,26);" "curriedTestCall (0,16,12);" "curriedTestCall (31,16,500);" 
"curriedTestCall (31,0,26);" "curriedTestCall (0,31,26);" "curriedTestCall (11,31,500);" "curriedTestCall (11,0,12);" "curriedTestCall (10,15,6);" "curriedTestCall (50,15,6);" "curriedTestCall (30,30,6);" "curriedTestCall (50,30,6);" 
"curriedTestCall (10,120,6);" "curriedTestCall (30,120,6);" "curriedTestCall (50,120,6);" "curriedTestCall (10,15,13);" "curriedTestCall (30,15,13);" "curriedTestCall (10,30,13);" "curriedTestCall (50,30,13);" "curriedTestCall (30,120,13);" 
"curriedTestCall (50,120,13);" "curriedTestCall (10,15,27);" "curriedTestCall (30,15,27);" "curriedTestCall (50,15,27);" "curriedTestCall (10,30,27);" "curriedTestCall (30,30,27);" "curriedTestCall (10,120,27);" "curriedTestCall (50,120,27);" 
"curriedTestCall (50,500,27);" "curriedTestCall (500,120,27);" "curriedTestCall (30,15,5);" "curriedTestCall (10,121,13);" "curriedTestCall (31,120,27);" "curriedTestCall (10,15,0);" "curriedTestCall (500,15,6);" "curriedTestCall (500,500,500);" 
"curriedTestCall (128,128,128);" "curriedTestCall (50,0,0);" "curriedTestCall (51,0,13);" "curriedTestCall (0,0,0);" "curriedTestCall (50,22,20);" "curriedTestCall (51,121,26);" 

Collected output:
0 val curriedTestCall = fn : int -> int -> int -> bool
1 Results:val it = () : unit
2 stdIn:4.1-4.27 Error: operator and operand do not agree [tycon mismatch]
3   operator domain: int
4   operand:         'Z[INT] * 'Y[INT] * 'X[INT]
5   in expression:
6     curriedTestCall (30,30,13)
7 
8 - 

Regex: ".*true.*" not found, all following regexs not checked
Note: All regex's are assumed to be in sequential order
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.junit.BasicJUnitUtils.assertTrue(BasicJUnitUtils.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:113)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Steps traced since last test:

Test Failed:View console for more detail%0.0
Running junit test:CurriedMatchingDerivedSafe
java.lang.AssertionError: CurriedMatchingSafe Must Pass first%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.junit.BasicJUnitUtils.assertTrue(BasicJUnitUtils.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:113)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Test Failed:CurriedMatchingSafe Must Pass first%0.0
Steps traced since last test:

Running junit test:CurriedMatchingGivenSafe
java.lang.AssertionError: CurriedMatchingSafe Must Pass first%0.0
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at grader.basics.junit.BasicJUnitUtils.assertTrue(BasicJUnitUtils.java:43)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:113)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:290)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:266)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6592)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4552)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Test Failed:CurriedMatchingSafe Must Pass first%0.0
Steps traced since last test:

]]></outputString>
  </Command>
  <Command __id="233" _type="EHExceptionCommand" date="Fri Oct 23 13:58:18 PDT 2020" starttimestamp="1603465420609" timestamp="21277807" type="Exception">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment3.functionReturnValues.CurryableMatchingSafe@2f97b770 . Results may change.
W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: TestRunStarted of object: FunctionReturnValuesTestSuite[60.0 pts](grader.basics.junit.AGradableJUnitSuite@49bd54f7). Ignoring notification.
]]></outputString>
  </Command>
  <Command __id="235" _type="RunCommand" date="Fri Oct 23 13:58:57 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="21317191" type="Run" />
  <Command __id="236" _type="RunCommand" date="Fri Oct 23 13:58:57 PDT 2020" kind="HitBreakPoint" projectName="Assignment3Tests" starttimestamp="1603465420609" timestamp="21317191" type="Run" />
  <Command __id="297" _type="ShellCommand" date="Fri Oct 23 14:05:06 PDT 2020" starttimestamp="1603465420609" timestamp="21686357" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="298" _type="ShellCommand" date="Fri Oct 23 14:05:16 PDT 2020" starttimestamp="1603465420609" timestamp="21696038" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="299" _type="ShellCommand" date="Fri Oct 23 18:08:11 PDT 2020" starttimestamp="1603465420609" timestamp="36271334" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="301" _type="ShellCommand" date="Fri Oct 23 18:08:14 PDT 2020" starttimestamp="1603465420609" timestamp="36273752" type="ECLIPSE_LOST_FOCUS" />
</Events>
